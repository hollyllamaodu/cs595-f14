<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html dir='ltr' xmlns='http://www.w3.org/1999/xhtml' xmlns:b='http://www.google.com/2005/gml/b' xmlns:data='http://www.google.com/2005/gml/data' xmlns:expr='http://www.google.com/2005/gml/expr' xmlns:g='http://www.google.com/2005/gml/g'>
<head>
<meta content='text/html; charset=UTF-8' http-equiv='Content-Type'/>
<script type="text/javascript">(function() { var b=window,f="chrome",g="tick",k="jstiming";(function(){function d(a){this.t={};this.tick=function(a,d,c){var e=void 0!=c?c:(new Date).getTime();this.t[a]=[e,d];if(void 0==c)try{b.console.timeStamp("CSI/"+a)}catch(h){}};this[g]("start",null,a)}var a;b.performance&&(a=b.performance.timing);var n=a?new d(a.responseStart):new d;b.jstiming={Timer:d,load:n};if(a){var c=a.navigationStart,h=a.responseStart;0<c&&h>=c&&(b[k].srt=h-c)}if(a){var e=b[k].load;0<c&&h>=c&&(e[g]("_wtsrt",void 0,c),e[g]("wtsrt_","_wtsrt",h),e[g]("tbsd_","wtsrt_"))}try{a=null,
b[f]&&b[f].csi&&(a=Math.floor(b[f].csi().pageT),e&&0<c&&(e[g]("_tbnd",void 0,b[f].csi().startE),e[g]("tbnd_","_tbnd",c))),null==a&&b.gtbExternal&&(a=b.gtbExternal.pageT()),null==a&&b.external&&(a=b.external.pageT,e&&0<c&&(e[g]("_tbnd",void 0,b.external.startE),e[g]("tbnd_","_tbnd",c))),a&&(b[k].pt=a)}catch(p){}})();b.tickAboveFold=function(d){var a=0;if(d.offsetParent){do a+=d.offsetTop;while(d=d.offsetParent)}d=a;750>=d&&b[k].load[g]("aft")};var l=!1;function m(){l||(l=!0,b[k].load[g]("firstScrollTime"))}b.addEventListener?b.addEventListener("scroll",m,!1):b.attachEvent("onscroll",m);
 })();</script>
<meta content='blogger' name='generator'/>
<link href='http://javarevisited.blogspot.com/favicon.ico' rel='icon' type='image/x-icon'/>
<link href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html' rel='canonical'/>
<link rel="alternate" type="application/atom+xml" title="Javarevisited - Atom" href="http://javarevisited.blogspot.com/feeds/posts/default" />
<link rel="alternate" type="application/rss+xml" title="Javarevisited - RSS" href="http://javarevisited.blogspot.com/feeds/posts/default?alt=rss" />
<link rel="service.post" type="application/atom+xml" title="Javarevisited - Atom" href="http://www.blogger.com/feeds/8712770457197348465/posts/default" />

<link rel="alternate" type="application/atom+xml" title="Javarevisited - Atom" href="http://javarevisited.blogspot.com/feeds/6918417983311999028/comments/default" />
<link href='http://2.bp.blogspot.com/-wrzDeQGAe1I/TWu8pLuLr4I/AAAAAAAAADE/V017G-6Q61w/s1600/java_logo_50_50.jpg' rel='image_src'/>
<link href='https://plus.google.com/114528699166048052030' rel='publisher'/>
<!--[if IE]> <script> (function() { var html5 = ("abbr,article,aside,audio,canvas,datalist,details," + "figure,footer,header,hgroup,mark,menu,meter,nav,output," + "progress,section,time,video").split(','); for (var i = 0; i < html5.length; i++) { document.createElement(html5[i]); } try { document.execCommand('BackgroundImageCache', false, true); } catch(e) {} })(); </script> <![endif]-->
<meta content='Method overloading and Method overriding are two powerful concept in Java which allows you to write extremely flexible code in Java. In this article we will see difference between method overloading and overriding in java.' name='description'/>
<meta content='overload vs overriding, method overloading, method overriding' name='keywords'/>
<!-- place future descriptions and keywords here -->
<script type='text/javascript'>
      if(document.location.protocol=='http:'){
         var Tynt=Tynt||[];Tynt.push('dU3ek4CPmr4Ai1acwqm_6r');Tynt.i={"ap":"Read more:"};
         (function(){var s=document.createElement('script');s.async="async";s.type="text/javascript";s.src='http://tcr.tynt.com/ti.js';var h=document.getElementsByTagName('script')[0];h.parentNode.insertBefore(s,h);})();
                                                  }
    </script>
<title>
What is Method Overloading and Overriding in Java - Example Differences Tutorial
</title>
<link type='text/css' rel='stylesheet' href='https://www.blogger.com/static/v1/widgets/3841957138-widget_css_bundle.css' />
<link type='text/css' rel='stylesheet' href='https://www.blogger.com/dyn-css/authorization.css?targetBlogID=8712770457197348465&zx=b999a16e-1d1b-4055-a9b3-d62be0b42b9d' />
<style id='page-skin-1' type='text/css'><!--
/*
-----------------------------------------------
Blogger Template Style
Name:     Rounders 3
Date:     27 Feb 2004
Updated by: Blogger Team
----------------------------------------------- */
#navbar-iframe {
display: none !important;
}
/* Variable definitions
====================
<Variable name="mainBgColor" description="Main Background Color"
type="color" default="#ffffff">
<Variable name="mainTextColor" description="Text Color" type="color"
default="#333">
<Variable name="postTitleColor" description="Post Title Color" type="color"
default="#333">
<Variable name="dateHeaderColor" description="Date Header Color"
type="color" default="#586">
<Variable name="borderColor" description="Post Border Color" type="color"
default="#bbb">
<Variable name="mainLinkColor" description="Link Color" type="color"
default="#456">
<Variable name="mainVisitedLinkColor" description="Visited Link Color"
type="color" default="#234">
<Variable name="mainHoverLinkColor" description="Hover Link Color"
type="color" default="#234">
<Variable name="titleBgColor" description="Page Header Background Color"
type="color" default="#357">
<Variable name="titleTextColor" description="Blog Title Color"
type="color" default="#fff">
<Variable name="topSidebarHeaderColor"
description="Top Sidebar Title Color"
type="color" default="#fff">
<Variable name="topSidebarBgColor"
description="Top Sidebar Background Color"
type="color" default="#586">
<Variable name="topSidebarTextColor" description="Top Sidebar Text Color"
type="color" default="#fff">
<Variable name="topSidebarLinkColor" description="Top Sidebar Link Color"
type="color" default="#fff">
<Variable name="topSidebarVisitedLinkColor"
description="Top Sidebar Visited Link Color"
type="color" default="#fff">
<Variable name="bottomSidebarHeaderColor"
description="Bottom Sidebar Title Color"
type="color" default="#abc">
<Variable name="bottomSidebarLinkColor"
description="Bottom Sidebar Link Color"
type="color" default="#99ddbb">
<Variable name="bottomSidebarVisitedLinkColor"
description="Bottom Sidebar Visited Link Color"
type="color" default="#ffffff">
<Variable name="bodyFont" description="Text Font" type="font"
default="normal normal 100% 'Trebuchet MS',Verdana,Arial,Sans-serif">
<Variable name="pageTitleFont" description="Blog Title Font" type="font"
default="normal bold 200% 'Trebuchet MS',Verdana,Arial,Sans-serif">
<Variable name="descriptionFont" description="Blog Description Font" type="font"
default="normal normal 100% 'Trebuchet MS',Verdana,Arial,Sans-serif">
<Variable name="headerFont" description="Sidebar Title Font" type="font"
default="normal bold 100% 'Trebuchet MS',Verdana,Arial,Sans-serif">
<Variable name="postTitleFont" description="Post Title Font" type="font"
default="normal bold 135% 'Trebuchet MS',Verdana,Arial,Sans-serif">
<Variable name="startSide" description="Start side in blog language"
type="automatic" default="left">
<Variable name="endSide" description="End side in blog language"
type="automatic" default="right">
*/
body, .body-fauxcolumn-outer {
background:#123;
margin:0;
text-align:center;
line-height: 1.5em;
font: x-small Trebuchet MS, Verdana, Arial, Sans-serif;
color:#333333;
font-size/* */:/**/small;
font-size: /**/small;
}
/* Page Structure
----------------------------------------------- */
/* The images which help create rounded corners depend on the
following widths and measurements. If you want to change
these measurements, the images will also need to change.
*/
#outer-wrapper {
width:1072px;
margin:0 auto;
text-align:left;
font: normal normal 100% 'Trebuchet MS',Verdana,Arial,Sans-serif;
}
#main-wrap1 {
width:732px;
float:left;
background:#ffffff url("") no-repeat left bottom;
margin:10px 0 0;
padding:0 0 10px;
color:#333333;
font-size:97%;
line-height:1.5em;
word-wrap: break-word; /* fix for long text breaking sidebar float in IE */
overflow: hidden;     /* fix for long non-text content breaking IE sidebar float */
}
#main-wrap2 {
float:left;
width:100%;
padding:10px 0 0;
}
#main {
padding:0;
width:732px;
}
#sidebar-wrap {
width:340px;
float:right;
margin:10px 0 0;
font-size:97%;
line-height:1.5em;
word-wrap: break-word; /* fix for long text breaking sidebar float in IE */
overflow: hidden;     /* fix for long non-text content breaking IE sidebar float */
}
.main .widget {
margin-top: 4px;
width: 686px;
padding: 0 13px;
}
.main .Blog {
margin: 0;
padding: 0;
width: 732px;
}
/* Links
----------------------------------------------- */
a:link {
color: #0066CC;
}
a:visited {
color: #660099;
}
a:hover {
color: #000066;
}
a img {
border-width:0;
}
/* Blog Header
----------------------------------------------- */
#header-wrapper {
background:#335577 url("") no-repeat left top;
margin-top:4px;
margin-right:0;
margin-bottom:0;
margin-left:0;
padding-top:2px;
padding-right:0;
padding-bottom:0;
padding-left:0;
color:#ffffff;
}
#header {
background:url("") no-repeat left bottom;
padding:0 15px 4px;
}
#header h1 {
margin:0;
padding:5px 30px 0px;
line-height:1.2em;
font: normal bold 200% 'Trebuchet MS',Verdana,Arial,Sans-serif;
}
#header a,
#header a:visited {
text-decoration:none;
color: #ffffff;
}
#header .description {
margin:0;
padding:1px 30px 15px;
line-height:0.5em;
font: normal normal 75% 'Trebuchet MS',Verdana,Arial,Sans-serif;
}
p.title {
margin:0;
padding:5px 30px 0px;
line-height:1.2em;
font: normal bold 200% 'Trebuchet MS',Verdana,Arial,Sans-serif;
}
p.title a{
text-decoration:none;
color: #ffffff;
}
/* Posts
----------------------------------------------- */
h2.date-header {
margin-top:0;
margin-right:28px;
margin-bottom:0;
margin-left:43px;
font-size:85%;
line-height:2em;
text-transform:uppercase;
letter-spacing:.2em;
color:#558866;
}
.post {
margin:.3em 0 25px;
padding:0 13px;
border:1px dotted #bbbbbb;
border-width:1px 0;
}
h2.post-title {
margin:0;
line-height:1.5em;
background:url("") no-repeat 10px .5em;
display:block;
border:1px dotted #bbbbbb;
border-width:0 1px 1px;
padding-top:2px;
padding-right:14px;
padding-bottom:2px;
padding-left:29px;
color: #333333;
font: normal bold 135% 'Trebuchet MS',Verdana,Arial,Sans-serif;
}
h2.post-title a, h2.post-title a:visited {
text-decoration:none;
color: #333333;
}
h1.post-title {
margin:0;
line-height:1.5em;
background:url("") no-repeat 10px .5em;
display:block;
border:1px dotted #bbbbbb;
border-width:0 1px 1px;
padding-top:2px;
padding-right:14px;
padding-bottom:2px;
padding-left:29px;
color: #333333;
font: normal bold 135% 'Trebuchet MS',Verdana,Arial,Sans-serif;
}
h1.post-title a, h1.post-title a:visited {
text-decoration:none;
color: #333333;
}
.post h3 {
margin:0;
line-height:1.5em;
display:block;
padding-top:2px;
padding-right:14px;
padding-bottom:2px;
padding-left:0px;
color: #333333;
font: normal bold 135% 'Trebuchet MS',Verdana,Arial,Sans-serif;
}
.post h3 a, .post h3 a:visited {
text-decoration:none;
color: #333333;
}
a.title-link:hover {
background-color: #bbbbbb;
color: #333333;
}
.post-body {
border:1px dotted #bbbbbb;
border-width:0 1px 1px;
border-bottom-color:#ffffff;
padding-top:10px;
padding-right:14px;
padding-bottom:1px;
padding-left:29px;
}
html>body .post-body {
border-bottom-width:0;
}
.post-body {
margin:0 0 .75em;
}
.post-body blockquote {
line-height:1.3em;
}
.post-footer {
background: #ffffff;
margin:0;
padding-top:2px;
padding-right:14px;
padding-bottom:2px;
padding-left:29px;
border:1px dotted #bbbbbb;
border-width:1px;
font-size:100%;
line-height:1.5em;
color: #666666;
}
/*
The first line of the post footer might only have floated text, so we need to give it a height.
The height comes from the post-footer line-height
*/
.post-footer-line-1 {
min-height:1.5em;
_height:1.5em;
}
.post-footer p {
margin: 0;
}
html>body .post-footer {
border-bottom-color:transparent;
}
.uncustomized-post-template .post-footer {
text-align: right;
}
.uncustomized-post-template .post-author,
.uncustomized-post-template .post-timestamp {
display: block;
float: left;
text-align:left;
margin-right: 4px;
}
.post-footer a {
color: #456;
}
.post-footer a:hover {
color: #234;
}
a.comment-link {
/* IE5.0/Win doesn't apply padding to inline elements,
so we hide these two declarations from it */
background/* */:/**/url("http://www.blogblog.com/rounders/icon_comment_left.gif") no-repeat left 45%;
padding-left:14px;
}
html>body a.comment-link {
/* Respecified, for IE5/Mac's benefit */
background:url("http://www.blogblog.com/rounders3/icon_comment_left.gif") no-repeat left 45%;
padding-left:14px;
}
.post img, table.tr-caption-container {
margin-top:0;
margin-right:0;
margin-bottom:5px;
margin-left:0;
padding:4px;
border:1px solid #bbbbbb;
}
.tr-caption-container img {
border: none;
margin: 0;
padding: 0;
}
blockquote {
margin:.75em 0;
border:1px dotted #bbbbbb;
border-width:1px 0;
padding:5px 15px;
color: #558866;
}
.post blockquote p {
margin:.5em 0;
}
#blog-pager-newer-link {
float: left;
margin-left: 13px;
}
#blog-pager-older-link {
float: right;
margin-right: 13px;
}
#blog-pager {
text-align: center;
}
.feed-links {
clear: both;
line-height: 2.5em;
margin-left: 13px;
}
/* Comments
----------------------------------------------- */
#comments {
margin:-25px 13px 0;
border:1px dotted #bbbbbb;
border-width:0 1px 1px;
padding-top:20px;
padding-right:0;
padding-bottom:15px;
padding-left:0;
}
#comments h4 {
margin:0 0 10px;
padding-top:0;
padding-right:14px;
padding-bottom:2px;
padding-left:29px;
border-bottom:1px dotted #bbbbbb;
font-size:120%;
line-height:1.4em;
color:#333333;
}
#comments-block {
margin-top:0;
margin-right:15px;
margin-bottom:0;
margin-left:9px;
}
.comment-author {
background:url("http://www.blogblog.com/rounders3/icon_comment_left.gif") no-repeat 2px .3em;
margin:.5em 0;
padding-top:0;
padding-right:0;
padding-bottom:0;
padding-left:20px;
font-weight:bold;
}
.comment-body {
margin:0 0 1.25em;
padding-top:0;
padding-right:0;
padding-bottom:0;
padding-left:20px;
}
.comment-body p {
margin:0 0 .5em;
}
.comment-footer {
margin:0 0 .5em;
padding-top:0;
padding-right:0;
padding-bottom:.75em;
padding-left:20px;
}
.comment-footer a:link {
color: #333;
}
.deleted-comment {
font-style:italic;
color:gray;
}
.comment-form {
padding-left:20px;
padding-right:5px;
}
#comments .comment-form h4 {
padding-left:0px;
}
/* Profile
----------------------------------------------- */
.profile-img {
float: left;
margin-top: 5px;
margin-right: 5px;
margin-bottom: 5px;
margin-left: 0;
border: 4px solid #ffffff;
}
.profile-datablock {
margin-top:0;
margin-right:15px;
margin-bottom:.5em;
margin-left:0;
padding-top:8px;
}
.profile-link {
background:url("http://www.blogblog.com/rounders3/icon_profile_left.gif") no-repeat left .1em;
padding-left:15px;
font-weight:bold;
}
.profile-textblock {
clear: both;
margin: 0;
}
.sidebar .clear, .main .widget .clear {
clear: both;
}
#sidebartop-wrap {
background:#558866 url("") no-repeat left bottom;
margin:0px 0px 15px;
padding:0px 0px 10px;
color:#ffffff;
}
#sidebartop-wrap2 {
background:url("") no-repeat left top;
padding: 10px 0 0;
margin:0;
border-width:0;
}
#sidebartop h2 {
line-height:1.5em;
color:#ffffff;
border-bottom: 1px dotted #ffffff;
font: normal bold 100% 'Trebuchet MS',Verdana,Arial,Sans-serif;
margin-bottom: 0.5em;
}
#sidebartop a {
color: #ffffff;
}
#sidebartop a:hover {
color: #ffffff;
}
#sidebartop a:visited {
color: #ffffff;
}
#sidebar a {
color: #99ddbb;
}
#sidebar a:hover,
#sidebar a:visited {
color: #ffffff;
}
/* Sidebar Boxes
----------------------------------------------- */
.sidebar .widget {
margin:.5em 13px 1.25em;
padding:0 0px;
}
.widget-content {
margin-top: 0.5em;
}
#sidebarbottom-wrap1 {
background:#335577 url("") no-repeat left top;
margin:0 0 15px;
padding:10px 0 0;
color: #ffffff;
}
#sidebarbottom-wrap2 {
background:url("") no-repeat left bottom;
padding:0 0 8px;
}
.sidebar h2 {
margin-top:0;
margin-right:0;
margin-bottom:.5em;
margin-left:0;
padding:0 0 .2em;
line-height:1.5em;
font:normal bold 100% 'Trebuchet MS',Verdana,Arial,Sans-serif;
}
.sidebar ul {
list-style:none;
margin:0 0 1.25em;
padding:0;
}
.sidebar ul li {
background:url("http://www2.blogblog.com/rounders3/icon_arrow_sm.gif") no-repeat 2px .25em;
margin:0;
padding-top:0;
padding-right:0;
padding-bottom:3px;
padding-left:16px;
margin-bottom:3px;
border-bottom:1px dotted #bbbbbb;
line-height:1.4em;
}
.sidebar p {
margin:0 0 .6em;
}
#sidebar h2 {
color: #aabbcc;
border-bottom: 1px dotted #aabbcc;
}
/* Footer
----------------------------------------------- */
#footer-wrap1 {
clear:both;
margin:0 0 10px;
padding:15px 0 0;
}
#footer-wrap2 {
background:#335577 url("") no-repeat left top;
color:#ffffff;
}
#footer {
background:url("") no-repeat left bottom;
padding:8px 15px;
}
#footer hr {display:none;}
#footer p {margin:0;}
#footer a {color:#ffffff;}
#footer .widget-content {
margin:0;
}
/** Page structure tweaks for layout editor wireframe */
body#layout #main-wrap1,
body#layout #sidebar-wrap,
body#layout #header-wrapper {
margin-top: 0;
}
body#layout #header, body#layout #header-wrapper,
body#layout #outer-wrapper {
margin-left:0,
margin-right: 0;
padding: 0;
}
body#layout #outer-wrapper {
width: 1030px;
}
body#layout #footer-wrap1 {
padding-top: 0;
}
#HTML8{
margin-bottom:-10px;
margin-top:-22px;
margin-left:-229px;
}
#HTML9{
margin-left:-10px;
}
#HTML11{
margin-left:2px;
margin-top:-20px;
}
#HTML15{
margin-top:-15px;
margin-top:-15px;
}
#HTML10{
margin-top:-30px;
}

--></style>
<script type='text/javascript'>
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-19004659-1']);
                 _gaq.push(['_trackPageview']);
                 _gaq.push(['_trackPageLoadTime']);
                 (function() {
                 var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                 ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
                 var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
                 })();
    </script>
<script type="text/javascript">var a="indexOf",b="&m=1",e="(^|&)m=",f="?",g="?m=1";function h(){var c=window.location.href,d=c.split(f);switch(d.length){case 1:return c+g;case 2:return 0<=d[1].search(e)?null:c+b;default:return null}}var k=navigator.userAgent;if(-1!=k[a]("Mobile")&&-1!=k[a]("WebKit")&&-1==k[a]("iPad")||-1!=k[a]("Opera Mini")||-1!=k[a]("IEMobile")){var l=h();l&&window.location.replace(l)};
</script><script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('headEnd');
</script></head>
<body>
<div class='navbar section' id='navbar'><div class='widget Navbar' id='Navbar1'><script type="text/javascript">
    function setAttributeOnload(object, attribute, val) {
      if(window.addEventListener) {
        window.addEventListener('load',
          function(){ object[attribute] = val; }, false);
      } else {
        window.attachEvent('onload', function(){ object[attribute] = val; });
      }
    }
  </script>
<div id="navbar-iframe-container"></div>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
<script type="text/javascript">
        gapi.load("gapi.iframes:gapi.iframes.style.bubble", function() {
          if (gapi.iframes && gapi.iframes.getContext) {
            gapi.iframes.getContext().openChild({
                url: 'https://www.blogger.com/navbar.g?targetBlogID\758712770457197348465\46blogName\75Javarevisited\46publishMode\75PUBLISH_MODE_BLOGSPOT\46navbarType\75LIGHT\46layoutType\75LAYOUTS\46searchRoot\75http://javarevisited.blogspot.com/search\46blogLocale\75en\46v\0752\46homepageUrl\75http://javarevisited.blogspot.com/\46targetPostID\0756918417983311999028\46blogPostOrPageUrl\75http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html\46blogFollowUrl\75https://plus.google.com/103515296667914706982\46vt\75-2726209938267196586',
                where: document.getElementById("navbar-iframe-container"),
                id: "navbar-iframe"
            });
          }
        });
      </script><script type="text/javascript">
(function() {
var script = document.createElement('script');
script.type = 'text/javascript';
script.src = '//pagead2.googlesyndication.com/pagead/js/google_top_exp.js';
var head = document.getElementsByTagName('head')[0];
if (head) {
head.appendChild(script);
}})();
</script>
</div></div>
<!--INFOLINKS_OFF-->
<div id='outer-wrapper'>
<div id='header-wrapper'>
<div class='header section' id='header'><div class='widget Header' id='Header1'>
<div id='header-inner'>
<div class='titlewrapper'>
<p class='title'>
<a href='http://javarevisited.blogspot.com/'>
Javarevisited
</a>
</p>
</div>
<div class='descriptionwrapper'>
<p class='description'>
<span>
Blog about  Java programming language, FIX Protocol, Tibco Rendezvous and related Java technology stack.
</span>
</p>
</div>
</div>
</div></div>
</div>
<div id='crosscol-wrapper' style='text-align:center'>
<div class='crosscol section' id='crosscol'><div class='widget HTML' id='HTML8'>
<div class='widget-content'>
<script type="text/javascript"><!--
google_ad_client = "ca-pub-5808379456926196";
google_ad_host = "pub-1556223355139109";
/* 728x15 Horizontal Large Link Unit */
google_ad_slot = "4582144791";
google_ad_width = 728;
google_ad_height = 15;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML8&action=editWidget&sectionId=crosscol' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML8"));' target='configHTML8' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget HTML' id='HTML2'>
<div class='widget-content'>
<div style="background: none repeat scroll 0% 0% rgb(255, 255, 255); border-color: rgb(204, 204, 204); margin-top: 90px; width: 75px;  margin-right: 10px; margin-left: -80px; display: block; top: 10px; position: fixed; list-style-type:none;padding-top:15px" id="sharebar" >
<a class="addthis_button_stumbleupon_badge"></a>
<a class="addthis_button_facebook_like" fb:like:layout="box_count"></a>
<a class="addthis_button_tweet" tw:count="vertical"></a> 
<a class="addthis_button_google_plusone" g:plusone:size="tall"></a>
<a class="addthis_button_linkedin_counter" li:counter="top"></a>
</div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML2&action=editWidget&sectionId=crosscol' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML2"));' target='configHTML2' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div></div>
</div>
<!--INFOLINKS_ON-->
<div id='main-wrap1'>
<div id='main-wrap2'>
<div class='main section' id='main'><div class='widget Blog' id='Blog1'>
<script type='text/javascript'>
                      __spr_config = {
                        pid: '4ee2dade396cef4af800010b',
                        title: "What is Method Overloading and Overriding in Java - Example Differences Tutorial",
                        ckw: "core java,core java interview question",
                        pub: "Friday, December 23, 2011",
                        url: "http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html"
                      };
                      (function(){ // The Slide by Simple Reach
                        var s = document.createElement('script');
                                                       s.async = true;
                                                       s.type = 'text/javascript';
                                                       s.src = document.location.protocol + '//d8rk54i4mohrb.cloudfront.net/js/slide.js';
                                                       (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(s);
                                                       })();
                    </script>
<div class='blog-posts hfeed'>
<!-- google_ad_section_start(name=default) -->

                        <div class="date-outer">
                      
<h2 class='date-header'>
<span>
Friday, December 23, 2011
</span>
</h2>

                        <div class="date-posts">
                      
<div class='post-outer'>
<div class='post hentry'>
<a name='6918417983311999028'></a>
<h1 class='post-title entry-title'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html' title='What is Method Overloading and Overriding in Java - Example Differences Tutorial'>
What is Method Overloading and Overriding in Java - Example Differences Tutorial
</a>
</h1>
<div class='post-header'>
<div class='post-header-line-1'></div>
<div style='float:right; margin:5px 6px 0px 5px'>

                        <script type="text/javascript"><!--
                        google_ad_client = "ca-pub-5808379456926196";
                        google_ad_host = "pub-1556223355139109";
                        /* Large Rectangle 300x250, created 1/25/11 */
                        google_ad_slot = "3870191442";
                        google_ad_width = 300;
                        google_ad_height = 250;
                        //-->
                        </script>
                        <script type="text/javascript"
                        src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                        </script>
                      
</div>
<div style='float:right; margin:5px 6px 0px 5px'>
</div>
</div>
<div class='post-body entry-content'>
<div dir="ltr" style="text-align: left;" trbidi="on">
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><b style="mso-bidi-font-weight: normal;"><span style="color: black; font-size: 9pt;"><u>What is method overloading and overriding in Java</u> </span></b></span><br />
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Method</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> overloading and method overriding in Java</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> is two important concept in Java which allows Java programmer to declare method with same name but different behavior. </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">Method overloading and method overriding is based on</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">polymorphism in Java. </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">In case of method overloading, method with same name co-exists in same class but they must have different method signature, while in case of method overriding, method with same name is declared in derived class or sub class.Method overloading is resolved using <a href="http://javarevisited.blogspot.sg/2012/03/what-is-static-and-dynamic-binding-in.html">static binding in Java</a> at compile time while method overriding is resolved using dynamic binding in Java at runtime. </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">In short When you overload a method in Java its <a href="http://java67.blogspot.sg/2012/08/what-is-method-overloading-in-java-example.html" rel="nofollow">method signature </a>got changed while</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">in case of overriding method si</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">gnature remains sam</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">e but </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">a method </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">can only be overridden in sub class. Since Java supports</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">polymorphism and res</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">olve object at run-time it is cap</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">able to call overridden method in Java. By the way difference between method overloading and overriding is also one of the popular <a href="http://javarevisited.blogspot.sg/2012/06/20-design-pattern-and-software-design.html">Java design question</a> and appear in almost all levels of&nbsp; Java interviews. </span></span></div>
<a name='more'></a><div style="font-family: Arial,Helvetica,sans-serif;">
<u> </u></div>
<h2 style="font-family: Arial,Helvetica,sans-serif;">
</h2>
<h2 style="font-family: Arial,Helvetica,sans-serif;">
<u><span style="font-style: normal; font-weight: normal;">What is method overloading and overriding in Java?</span></u></h2>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span style="color: black; font-size: 9pt;">In this Java tutorial we will see how Java allows you to create two methods of same name by using method overloading and method overriding. We will also touch base on how methods are bonded or called by Compiler and <a href="http://javarevisited.blogspot.sg/2011/11/hotspot-jvm-options-java-examples.html">Java Virtual Machine</a> and finally we will answer of popular interview questions difference between method overloading and method overriding in Java. This article is in my series of Java article which discusses about Interview e.g. Difference between Synchronized Collection and Concurrent Collection or How to Stop Thread in Java. Please let me know if you have some other interview questions and you are looking answer or reason for that and here in Javarevisited we will try to find and discuss those interview questions.</span></div>
<div class="MsoNormal">
<br /></div>
<div class="MsoNormal">
<span style="color: black; font-family: Verdana; font-size: 9pt;"><span class="MsoHyperlink"><span style="color: black; text-decoration: none;"></span></span></span></div>
<h3 style="font-family: Arial,Helvetica,sans-serif;">
<b><u><span class="MsoHyperlink"><span style="color: black; font-weight: normal; text-decoration: none;">How to overload a method in Java</span></span></u></b></h3>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<a href="http://javarevisited.blogspot.com/2011/09/difference-hashmap-vs-hashset-java.html" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img alt="What is method overridding and overloading in Java - Differences , Example " border="0" src="http://2.bp.blogspot.com/-wrzDeQGAe1I/TWu8pLuLr4I/AAAAAAAAADE/V017G-6Q61w/s1600/java_logo_50_50.jpg" title="" /></a><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">If you have two </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">methods</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> with same name in one </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"><a href="http://javarevisited.blogspot.com/2011/10/class-in-java-programming-general.html">Java class</a></span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> with different method signature than its called <b style="mso-bidi-font-weight: normal;">overloaded</b></span></span><span class="MsoHyperlink"><b style="mso-bidi-font-weight: normal;"><span style="color: black; font-size: 9pt;"> </span></b></span><span class="MsoHyperlink"><b style="mso-bidi-font-weight: normal;"><span style="color: black; font-size: 9pt; text-decoration: none;">method in Java</span></b></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">. Generally overloaded method in Java has different set of arguments to perform something</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">based on different </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">number of </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">input. You can also <a href="http://javarevisited.blogspot.sg/2012/01/what-is-constructor-overloading-in-java.html">overload constructor in Java</a>, which we will see in following example of method</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">overloading in Java. </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Binding</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> of overloading method occurs during compile time and overloaded calls resolved using static binding. </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">To</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> overload a Java method just changes</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">its signature. </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Just</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> remember in order to change signature you either need to change number of argument, </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">type of argument or order of argument in Java if they are of different types. </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Since</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> return type is not part of method signature simply changing return type will</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">result in duplicate method and you will get compile time error in Java. </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">In</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> our example of <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">Loan</span> and </span></span><span class="MsoHyperlink" style="font-family: &quot;Courier New&quot;,Courier,monospace;"><span style="color: black; font-size: 9pt; text-decoration: none;">Per</span></span><span class="MsoHyperlink" style="font-family: &quot;Courier New&quot;,Courier,monospace;"><span style="color: black; font-size: 9pt;">s</span></span><span class="MsoHyperlink" style="font-family: &quot;Courier New&quot;,Courier,monospace;"><span style="color: black; font-size: 9pt; text-decoration: none;">onalLoan</span></span><span class="MsoHyperlink" style="font-family: &quot;Courier New&quot;,Courier,monospace;"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">class, </span></span><span class="MsoHyperlink" style="font-family: &quot;Courier New&quot;,Courier,monospace;"><span style="color: black; font-size: 9pt; text-decoration: none;">createLoan</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"><span style="font-family: &quot;Courier New&quot;,Courier,monospace;"> </span>method is overloaded. Since you have two </span></span><span class="MsoHyperlink" style="font-family: &quot;Courier New&quot;,Courier,monospace;"><span style="color: black; font-size: 9pt; text-decoration: none;">crateLoan()</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"><span style="font-family: &quot;Courier New&quot;,Courier,monospace;"> </span>method with one takes one argument</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">lender while other take two argument both lender and <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">interestRate</span>. Remember you can overload <a href="http://javarevisited.blogspot.sg/2011/11/static-keyword-method-variable-java.html">static method in Java</a>, you can also overload private and <a href="http://javarevisited.blogspot.sg/2011/12/final-variable-method-class-java.html">final method in Java</a> but you can not override them.</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span></div>
<div class="MsoNormal">
<br />
<br /></div>
<h3>
<u><span class="MsoHyperlink"><span style="font-weight: normal;">How to override a method in Java</span></span></u></h3>
<div class="MsoNormal">
<span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">In order to override a Java method, you need to create a child class which extends parent. Overridden method in Java also shares same name as original method in Java but can only be overridden in sub</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">class. </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;">Original</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> method has to be defined inside <a href="http://javarevisited.blogspot.sg/2012/04/10-points-on-interface-in-java-with.html">interface </a>or base class, which can be <a href="http://javarevisited.blogspot.sg/2010/10/abstraction-in-java.html">abstract </a>as well. </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;">When</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> you <b style="mso-bidi-font-weight: normal;">override a method in Java</b></span></span><span class="MsoHyperlink"><b style="mso-bidi-font-weight: normal;"><span style="color: black; font-family: Verdana; font-size: 9pt;"> </span></b></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">its signature remains exactly same including return type. JVM resolves correct overridden</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> method based</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">upon object at run-time by using dynamic binding in Java. </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;">For</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> example in our case when we call </span></span><span class="MsoHyperlink"><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 9pt; text-decoration: none;">personalLoan.toString()</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> method even though</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 9pt; text-decoration: none;">personalLoan</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> object is of type Loan actual method called would be from </span></span><span class="MsoHyperlink"><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 9pt; text-decoration: none;">PersonalLoan</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> class because object</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">referenced by </span></span><span class="MsoHyperlink"><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 9pt; text-decoration: none;">personalLoan</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> variable is of type </span></span><span class="MsoHyperlink"><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 9pt; text-decoration: none;">PersonalLoan()</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">. This is very useful technique to modify</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">behavior of a function in Java based on different implementation. </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;">Equals</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">, </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;">hashcode</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> and </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;">compareTo methods </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">are classic example of overridden methods in Java.</span></span></div>
<div class="MsoNormal">
<br /></div>
<div class="MsoNormal">
<span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;">Another important point is that you can not override static method in Java because they are associated with Class rather than object and resolved and bonded during compile time and that&#8217;s the reason you cannot override main method in Java. Similar to static, private and final methods are also not <i style="mso-bidi-font-style: normal;">overridden in Java</i>. By the way, as part of overriding best practice, always <a href="http://javarevisited.blogspot.co.uk/2012/11/why-use-override-annotation-in-java.html">use @Override annotation</a>, while overriding method from an abstract class or interface.</span></span></div>
<div class="MsoNormal">
<br />
<!--[if gte mso 9]><xml>  <w:WordDocument>   <w:View>Normal</w:View>   <w:Zoom>0</w:Zoom>   <w:PunctuationKerning/>   <w:ValidateAgainstSchemas/>   <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>   <w:IgnoreMixedContent>false</w:IgnoreMixedContent>   <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>   <w:Compatibility>    <w:BreakWrappedTables/>    <w:SnapToGridInCell/>    <w:WrapTextWithPunct/>    <w:UseAsianBreakRules/>    <w:DontGrowAutofit/>   </w:Compatibility>   <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>  </w:WordDocument> </xml><![endif]--><!--[if gte mso 9]><xml>  <w:LatentStyles DefLockedState="false" LatentStyleCount="156">  </w:LatentStyles> </xml><![endif]--><!--[if gte mso 10]> <style>
 /* Style Definitions */
 table.MsoNormalTable
 {mso-style-name:"Table Normal";
 mso-tstyle-rowband-size:0;
 mso-tstyle-colband-size:0;
 mso-style-noshow:yes;
 mso-style-parent:"";
 mso-padding-alt:0in 5.4pt 0in 5.4pt;
 mso-para-margin:0in;
 mso-para-margin-bottom:.0001pt;
 mso-pagination:widow-orphan;
 font-size:10.0pt;
 font-family:"Times New Roman";
 mso-ansi-language:#0400;
 mso-fareast-language:#0400;
 mso-bidi-language:#0400;}
</style> <![endif]-->  <br />
<div class="MsoNormal">
<b><span class="CharChar1"><u><span style="font-size: 14.0pt; font-style: normal; font-weight: normal; mso-bidi-font-weight: bold;">Rules of Method Overriding in Java</span></u></span></b></div>
<div class="MsoNormal">
<span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;"><span style="font-family: Arial,Helvetica,sans-serif;">Following are rules of method overriding in java which must be followed while overriding any method. as stated earlier private, static and final method can not be overridden.</span></span></span></div>
<ol style="text-align: left;">
<li><span style="color: black; font-family: Arial; font-size: 9pt;"> <b style="mso-bidi-font-weight: normal;">Method signature must be same</b> including return type, number of method parameters, type of parameters and order of parameters</span></li>
<li><span style="color: black; font-family: Arial; font-size: 9.0pt;"> <b style="mso-bidi-font-weight: normal;">Overriding method can not throw higher Exception</b> than original or overridden method. means if original method throws IOException than overriding method can not <a href="http://javarevisited.blogspot.sg/2012/02/difference-between-throw-and-throws-in.html">throw </a>super class of <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">IOException </span>e.g. Exception but it can throw any sub class of <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">IOException </span>or simply does not throw any <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">Exception</span>. This rule only applies to <a href="http://javarevisited.blogspot.sg/2011/12/checked-vs-unchecked-exception-in-java.html">checked Exception in Java</a>, overridden method is free to throw any <a href="http://javarevisited.blogspot.sg/2011/12/checked-vs-unchecked-exception-in-java.html">unchecked Exception</a>.</span>  </li>
<li><b style="mso-bidi-font-weight: normal;"><span style="color: black; font-family: Arial; font-size: 9.0pt;">Overriding method can not reduce accessibility of overridden method , </span></b><span style="color: black; font-family: Arial; font-size: 9.0pt;">means if original or overridden method is public than overriding method can not make it protected.</span></li>
</ol>
</div>
<div class="MsoNormal">
<br /></div>
<h3 style="font-family: Arial,Helvetica,sans-serif; text-align: left;">
<u><span class="MsoHyperlink"><span style="color: black; font-weight: normal;">Difference between method overloading vs overriding in Java</span></span></u></h3>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><b style="mso-bidi-font-weight: normal;"><span style="color: black; font-size: 9pt; text-decoration: none;">Overloading vs Overriding in Java</span></b></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> is one of the </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"><a href="http://javarevisited.blogspot.com/2011/04/top-20-core-java-interview-questions.html">popular java interview questions</a></span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> at many companies and asked at </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">different levels of programmers. </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Here</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> are some of the silent <i style="mso-bidi-font-style: normal;">difference between overloading and overriding</i></span></span><span class="MsoHyperlink"><i style="mso-bidi-font-style: normal;"><span style="color: black; font-size: 9pt;"> </span></i></span><span class="MsoHyperlink"><i style="mso-bidi-font-style: normal;"><span style="color: black; font-size: 9pt; text-decoration: none;">in Java.</span></i></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Though</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> more important is to understand how to use both overloading and overriding, these difference</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">are good from interview perspective and gives some basic idea as well:</span></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<br /></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">1) </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">First and most important difference between method overloading and overriding is that, In</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> case of method overloading in Java, Signature of method changes while in case of method overriding</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">it remain same.</span></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">2) Second major difference between method overloading vs overriding in Java is that You can overload method in one class but overriding can only be done on subclass.</span></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">3) You can not override <a href="http://javarevisited.blogspot.sg/2012/03/mixing-static-and-non-static.html">static</a>, <a href="http://javarevisited.blogspot.sg/2011/12/final-variable-method-class-java.html">final </a>and <a href="http://javarevisited.blogspot.sg/2012/05/how-to-access-private-field-and-method.html">private method</a> in Java </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">but you can overload static, final or private method in Java.</span></span><br />
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"><br />
</span></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">4) </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Overloaded</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> method </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">in Java is</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> bonded by static binding and overridden methods are subject to dynamic binding.</span></span></div>
<div class="MsoNormal">
<span class="MsoHyperlink" style="font-family: Arial,Helvetica,sans-serif;"><span style="color: black; font-size: 9pt; text-decoration: none;">5)</span></span><span class="MsoHyperlink" style="font-family: Arial,Helvetica,sans-serif;"><span style="color: black; font-size: 9pt;"> Private and final method can also be not overridden in Java.</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"></span></span></div>
<div class="MsoNormal">
<br />
<br /></div>
<div class="MsoNormal">
<h3 style="font-family: Arial,Helvetica,sans-serif; font-weight: normal;">
<u>Exceptions handling while overloading and overriding method in Java</u></h3>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span style="color: black; font-size: 9pt;">While overriding a method it can only throw <a href="http://javarevisited.blogspot.sg/2011/12/checked-vs-unchecked-exception-in-java.html">checked exception</a> declared by by overridden method or any subclass of it, means if overridden method throws <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">IOExcpetion </span>than overriding method can throw sub classes of <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">IOExcpetion </span>e.g. <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">FileNotFoundException </span>but not wider exception e.g. <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">Exception </span>or <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">Throwable</span>. This restriction is only for checked Exception for <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">RuntimeException </span>you can throw any <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">RuntimeException</span>. Overloaded method in Java doesn&#8217;t have such restriction and you are free to modify throws clause as per your need.</span></div>
</div>
<h3>
<b><u><span class="MsoHyperlink"><span style="color: black; font-weight: normal;">Example of method overloading and overriding in Java</span></span></u></b></h3>
<div class="MsoNormal">
<div style="float: left;">
<script type="text/javascript">
<!--
google_ad_client = "pub-5808379456926196";
/* Link Unit 5 link 120x90, created 6/16/11 */
google_ad_slot = "7778778358";
google_ad_width = 120;
google_ad_height = 90;
//</script>
</div>
</div>
<span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">Here is an example of both method overloading and method overriding in Java. In order to explain the concept we</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">have create two classes </span></span><span class="MsoHyperlink"><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 9pt; text-decoration: none;">Loan</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> and </span></span><span class="MsoHyperlink"><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 9pt; text-decoration: none;">PersonalLoan</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">. </span></span><span class="MsoHyperlink"><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 9pt; text-decoration: none;">createLoan()</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> method is overloaded as it has different</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">version with different signature, while </span></span><span class="MsoHyperlink"><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 9pt; text-decoration: none;">toString()</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;"> method which is original declared in Object class</span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-family: Verdana; font-size: 9pt; text-decoration: none;">is overridden in both Loan and PersonalLoan class.</span></span><br />
<div style="background: none repeat scroll 0% 0% rgb(243, 243, 243); border: 1pt dotted windowtext; padding: 1pt 4pt;">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Normal</w:View>
  <w:Zoom>0</w:Zoom>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]-->

<br />
<div style="background: #F3F3F3; border: dotted windowtext 1.0pt; mso-border-alt: dotted windowtext .5pt; mso-element: para-border-div; padding: 1.0pt 4.0pt 1.0pt 4.0pt;">
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">public class <b style="mso-bidi-font-weight: normal;"><i>OverloadingOverridingTest</i></b> {</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>public static void </span><b><span style="color: #0000a2; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">main</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">(String[] <i>args</i>)
{</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="color: #00b418; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">// Example of method overloading in
Java</span><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"></span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Loan cheapLoan </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">=</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> Loan</span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">.</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">createLoan(</span><span style="color: #d80800; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">"HSBC"</span><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">);</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Loan veryCheapLoan </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">=</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> Loan</span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">.</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">createLoan(</span><span style="color: #d80800; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">"Citibank"</span><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">);</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="color: #00b418; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">// Example of method overriding in
Java</span><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"></span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Loan personalLoan </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">=</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">new</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> PersonalLoan();</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>personalLoan</span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">.</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">toString();</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>}</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">}</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">public class <b style="mso-bidi-font-weight: normal;"><i>Loan</i></b> {</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>private double interestRate;</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>private String customer;</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>private String lender;</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>public static Loan </span><b><span style="color: #0000a2; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">createLoan</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">(String <i>lender</i>)
{</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Loan loan </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">=</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">new</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> Loan();</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>loan</span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">.</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">lender </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">=</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> lender;</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">return</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> loan;</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>}</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>public static Loan </span><b><span style="color: #0000a2; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">createLoan</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">(String <i>lender</i>,
double <i>interestRate</i>) {</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Loan loan </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">=</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">new</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> Loan();</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>loan</span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">.</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">lender </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">=</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> lender;</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>loan</span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">.</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">interestRate </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">=</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> interestRate;</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">return</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> loan;</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>}</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>@Override</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>public String </span><b><span style="color: #0000a2; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">toString</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">() {</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">return</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> </span><span style="color: #d80800; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">"This is
Loan by Citibank"</span><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">;</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>}</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">}</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">public class <b style="mso-bidi-font-weight: normal;"><i>PersonalLoan</i></b> extends <b style="mso-bidi-font-weight: normal;"><i>Loan</i></b>
{</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>@Override</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>public String </span><b><span style="color: #0000a2; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">toString</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">() {</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">return</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> </span><span style="color: #d80800; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">"This is
Personal Loan by Citibank"</span><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">;</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>}</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">}</span></div>
</div>
</div>
<div class="MsoNormal">
<br /></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><b style="mso-bidi-font-weight: normal;"><span style="color: black; font-size: 9pt;">Summary</span></b></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">1) In case of method overloading method signature gets changed while in case of overriding signature</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">remains same.</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"></span></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<br /></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">2) </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Return</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> type is not part of method signature in Java.</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"></span></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<br /></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">3) </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Overloaded</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> method can be subject to compile time binding but overridden method can only be bind at run-time.</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"></span></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<br /></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">4) Both overloaded and overridden method has same name in Java.</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"></span></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<br /></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">5) </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Static</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> method can not be overridden in Java.</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"></span></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<br /></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">6) </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Since</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;"> private method is also not visible outside of class, it can not be overridden and method binding</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"> </span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt; text-decoration: none;">happens during compile time.</span></span><span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"></span></span></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<br /></div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">7) From <b style="mso-bidi-font-weight: normal;">Java5</b> onwards you can use annotation in Java to declare overridden method just like we did with <span style="font-family: &quot;Courier New&quot;,Courier,monospace;">@override</span>. <b style="mso-bidi-font-weight: normal;"><span style="font-family: &quot;Courier New&quot;,Courier,monospace;">@override</span> annotation</b> allows compiler, IDE like <a href="http://javarevisited.blogspot.com/2011/08/how-to-view-javadoc-in-netbeans-ide-70.html">NetBeans </a>and <a href="http://javarevisited.blogspot.com/2010/10/eclipse-tutorial-most-useful-eclipse.html">Eclipse </a>to cross verify or check if this method is really overrides super class method or not.</span></span><br />
<br />
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt;"><b>Update:</b> One of my reader Rajeev makes an interesting comment about one change related to return type of overriding method from Java 5 onwards, which enable to use subtype of return type of overridden method. This is really useful, when original method returns a general type like java.lang.Object. If you are overriding clone() method in Java then you can use this feature to return actual type, instead of returning java.lang.Object and can save caller from type-casting cloned object.&nbsp; Here is the actual comment from Rajeev:</span></span><br />
<blockquote class="tr_bq">
<span class="MsoHyperlink"><span style="color: black; font-size: 9pt;">Hi Javin,I visit your blog regularly and I found that you missed covariant return which is added in Java 5 in the case of method overriding. When a subclass wants to change the method implementation of an inherited method (an override), the subclass must define a method that matches the inherited version exactly. Or, as of Java 5, you're allowed to change the return type in the overriding method as long as the new return type is a subtype of the declared return type of the overridden (super class) method. Let's look at a covariant return in action:</span></span></blockquote>
<div style="background: #F3F3F3; border: dotted windowtext 1.0pt; mso-border-alt: dotted windowtext .5pt; mso-element: para-border-div; padding: 1.0pt 4.0pt 1.0pt 4.0pt;">
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">class <i>Alpha</i> {</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>Alpha </span><b><span style="color: #0000a2; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">doStuff</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">(char <i>c</i>)
{</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">return</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">new</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> Alpha();</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>}</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">}</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<br /></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">class <i>Beta</i> extends <i>Alpha</i>
{</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>Beta </span><b><span style="color: #0000a2; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">doStuff</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">(char <i>c</i>)
{ </span><span style="color: #00b418; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">//
legal override in Java 1.5</span><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"></span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">return</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> </span><b><span style="color: #0100b6; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">new</span></b><span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"> Beta();</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;"><span style="mso-spacerun: yes;">&nbsp;&nbsp;&nbsp; </span>}</span></div>
<div class="MsoNormal" style="background: #F3F3F3; border: none; mso-border-alt: dotted windowtext .5pt; mso-padding-alt: 1.0pt 4.0pt 1.0pt 4.0pt; padding: 0in; tab-stops: 45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;">
<span style="color: black; font-family: &quot;Courier New&quot;; font-size: 10.0pt;">}</span></div>
</div>
</div>
<div class="MsoNormal" style="font-family: Arial,Helvetica,sans-serif;">
AS&nbsp; I said one of the good example of this is overriding clone method and using return type as Actual type instead of java.lang.Object, which is suggested by Joshua Bloch in Effective Java as well. This in in-fact one of the Java best practices while implementing clone method in Java. By the way don't forget to follow these <a href="http://javarevisited.blogspot.com.au/2013/01/java-best-practices-method-overloading-constructor.html">Java overloading best practices</a>, when doing it in your project.<br />
<br /></div>
</div>
<div style='clear: both; margin-left:-40px'>

                        <script type="text/javascript"><!--
                        google_ad_client = "ca-pub-5808379456926196";
                        google_ad_host = "pub-1556223355139109";
                        /* 728x90 Leaderboard */
                        google_ad_slot = "3886401219";
                        google_ad_width = 728;
                        google_ad_height = 90;
                        //-->
                        </script>
                        <script type="text/javascript"
                        src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
                        </script>
                      
</div>
<div dir='ltr' style='text-align: left; background-color:white; margin-top:10px; margin-bottom:5px; padding: 3px' trbidi='on'>
<div class='MsoNormal'>
</div>
<div class='addthis_toolbox addthis_default_style addthis_32x32_style' style='padding-right:5px'>
<a class='addthis_button_email'></a>
<a class='addthis_button_delicious'></a>
<a class='addthis_button_linkedin'></a>
<a class='addthis_button_stumbleupon'></a>
<a class='addthis_button_reddit'></a>
<a class='addthis_button_digg'></a>
<a class='addthis_button_dzone'></a>
<a class='addthis_button_hackernews'></a>
<a class='addthis_button_compact' href='http://www.addthis.com/bookmark.php?v=250&pubid=javabuddy'></a>
</div>
<script type='text/javascript'>
                          var addthis_config = {"data_track_clickback":true};</script>
<script src='http://s7.addthis.com/js/250/addthis_widget.js#username=javabuddy' type='text/javascript'></script>
</div>
<div style='clear: both;'></div>
</div>
<div class='post-footer'>
<div class='post-footer-line post-footer-line-1'>
<span class='post-author vcard'>
Posted by
<span class='fn'>
Javin Paul
</span>
</span>
<span class='post-timestamp'>
at
<a class='timestamp-link' href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html' rel='bookmark' title='permanent link'>
<abbr class='published' title='2011-12-23T20:35:00-08:00'>
8:35 PM
</abbr>
</a>
</span>
<span class='post-comment-link'>
</span>
<span class='post-icons'>
<span class='item-action'>
<a href='http://www.blogger.com/email-post.g?blogID=8712770457197348465&postID=6918417983311999028' title='Email Post'>
<img alt='' class='icon-action' height='13' src='http://img1.blogblog.com/img/icon18_email.gif' width='18'/>
</a>
</span>
<span class='item-control blog-admin pid-1367717747'>
<a href='http://www.blogger.com/post-edit.g?blogID=8712770457197348465&postID=6918417983311999028&from=pencil' title='Edit Post'>
<img alt='' class='icon-action' height='18' src='http://img2.blogblog.com/img/icon18_edit_allbkg.gif' width='18'/>
</a>
</span>
</span>
<div class='post-share-buttons'>
<a class='goog-inline-block share-button sb-email' href='http://www.blogger.com/share-post.g?blogID=8712770457197348465&postID=6918417983311999028&target=email' target='_blank' title='Email This'>
<span class='share-button-link-text'>
Email This
</span>
</a>
<a class='goog-inline-block share-button sb-blog' href='http://www.blogger.com/share-post.g?blogID=8712770457197348465&postID=6918417983311999028&target=blog' onclick='window.open(this.href, "_blank", "height=270,width=475"); return false;' target='_blank' title='BlogThis!'>
<span class='share-button-link-text'>
BlogThis!
</span>
</a>
<a class='goog-inline-block share-button sb-twitter' href='http://www.blogger.com/share-post.g?blogID=8712770457197348465&postID=6918417983311999028&target=twitter' target='_blank' title='Share to Twitter'>
<span class='share-button-link-text'>
Share to Twitter
</span>
</a>
<a class='goog-inline-block share-button sb-facebook' href='http://www.blogger.com/share-post.g?blogID=8712770457197348465&postID=6918417983311999028&target=facebook' onclick='window.open(this.href, "_blank", "height=430,width=640"); return false;' target='_blank' title='Share to Facebook'>
<span class='share-button-link-text'>
Share to Facebook
</span>
</a>
<div class='goog-inline-block dummy-container'>
<g:plusone source='blogger:blog:plusone' href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html' size='medium' width='300' annotation='inline'/>
</div>
</div>
</div>
<div class='post-footer-line post-footer-line-2'>
<span class='post-labels'>
Labels:
<a href='http://javarevisited.blogspot.com/search/label/core%20java?max-results=3' rel='tag'>
core java
</a>

                              ,
                            
<a href='http://javarevisited.blogspot.com/search/label/core%20java%20interview%20question?max-results=3' rel='tag'>
core java interview question
</a>
</span>
</div>
<div class='post-footer-line post-footer-line-3'>
<span class='post-location'>
Location:
<a href='http://maps.google.com/maps?q=United+States@39.63953756436671,-102.3046875&z=10' target='_blank'>
United States
</a>
</span>
</div>
</div>
</div>
<div class='comments' id='comments'>
<a name='comments'></a>
<h4>
14 comments
                      :
                    </h4>
<div id='Blog1_comments-block-wrapper'>
<dl class='' id='comments-block'>
<dt class='comment-author anon-comment-icon' id='c2206370549200709842'>
<a name='c2206370549200709842'></a>
Anonymous
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-2206370549200709842'>
<p>
what about the exceptions while overriding and overloading
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1325735442115#c2206370549200709842' title='comment permalink'>
January 4, 2012 at 7:50 PM
</a>
<span class='item-control blog-admin pid-508649795'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=2206370549200709842' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c2060418355058948547'>
<a name='c2060418355058948547'></a>
<a href='http://javarevisited.blogspot.com/2011/09/spring-interview-questions-answers-j2ee.html' rel='nofollow'>
Javin @ spring interview questions answers
</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-2060418355058948547'>
<p>
Good point, I have added one section regarding exception handling for overloading and overriding methods in java. thanks for pointing this.
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1325764281226#c2060418355058948547' title='comment permalink'>
January 5, 2012 at 3:51 AM
</a>
<span class='item-control blog-admin pid-163747838'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=2060418355058948547' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c6214911491776754547'>
<a name='c6214911491776754547'></a>
Rajeev
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-6214911491776754547'>
<p>
Hi Javin,I visit your blog regularly and I found that you missed covariant return which is added in Java5 in the case of method overriding.<br />When a subclass wants to change the method implementation of an inherited method (an override), the subclass must define a method that matches the inherited<br />version exactly. Or, as of Java 5, you&#39;re allowed to change the return type in the<br />overriding method as long as the new return type is a subtype of the declared return<br />type of the overridden (superclass) method.<br />Let&#39;s look at a covariant return in action:<br />class Alpha {<br />Alpha doStuff(char c) {<br />return new Alpha();<br />}<br />}<br />class Beta extends Alpha {<br />Beta doStuff(char c) { // legal override in Java 1.5<br />return new Beta();<br />}<br />}
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1336132901900#c6214911491776754547' title='comment permalink'>
May 4, 2012 at 5:01 AM
</a>
<span class='item-control blog-admin pid-581775779'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=6214911491776754547' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c8677712752941713656'>
<a name='c8677712752941713656'></a>
Anonymous
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-8677712752941713656'>
<p>
to add on what you have described, overloading is done in two steps, first JVM finds all the methods which are applicable for a given type of argument and than in second step it pick the most specific method. for exmaple if you have two method one which takes Object clas as parameter and other takes String class as parameter like below<br /><br />public void show(Object ob){}<br />public void show(String str){}<br /><br />and you call show(null) than since both show() method which are overloaded are applicable but Java will pick the most specific one which is the String version because String is more specific than Object. <br /><br />Cheers
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1341374599836#c8677712752941713656' title='comment permalink'>
July 3, 2012 at 9:03 PM
</a>
<span class='item-control blog-admin pid-1331193898'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=8677712752941713656' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c8890402626044800621'>
<a name='c8890402626044800621'></a>
Anonymous
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-8890402626044800621'>
<p>
Overriding method cannot assign weaker access privileges: <br />protected in parent<br />must be kept<br />public/protected in subclass
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1343957133204#c8890402626044800621' title='comment permalink'>
August 2, 2012 at 6:25 PM
</a>
<span class='item-control blog-admin pid-1838784700'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=8890402626044800621' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c1070338442102646852'>
<a name='c1070338442102646852'></a>
Anonymous
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-1070338442102646852'>
<p>
Most simple difference between overloading and overriding in Java is former is a compile time activity while later is a runtime activity. Overloading is fast , overriding is slow. Overloading uses static binding, overriding uses dynamic binding. private, static and final method can be overloaded but can not be overridden.
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1346302783441#c1070338442102646852' title='comment permalink'>
August 29, 2012 at 9:59 PM
</a>
<span class='item-control blog-admin pid-461095353'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=1070338442102646852' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c8987981239536433544'>
<a name='c8987981239536433544'></a>
Sunil
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-8987981239536433544'>
<p>
@Rajiv, Thanks for informing about covariant return type, which allows to change return type of overriding method in Java 1.5, does you can do this only on methods which has Object as return type or its also possible to override a method which has return type long with overriding method has return type primitive int ?
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1346302957351#c8987981239536433544' title='comment permalink'>
August 29, 2012 at 10:02 PM
</a>
<span class='item-control blog-admin pid-461095353'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=8987981239536433544' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c420627993511777053'>
<a name='c420627993511777053'></a>
Anonymous
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-420627993511777053'>
<p>
What is method overloading in Java ?<br />- multiple method with same name<br />Why do you need overloading in Java<br /> -because you have method which does same job but with different operands e.g. size() method finding size of Array, Collection and string<br /><br />When do you use method overloading in Java ?<br />same as above <br />
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1346398472206#c420627993511777053' title='comment permalink'>
August 31, 2012 at 12:34 AM
</a>
<span class='item-control blog-admin pid-461095353'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=420627993511777053' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c896595845343310172'>
<a name='c896595845343310172'></a>
Anonymous
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-896595845343310172'>
<p>
Example of method overloading and method overriding is not clear to me ? Can you please explain why you overloaded createLoan() method ? Its better you put another example of method overloading and overriding which makes more sense and easy to understand.
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1347272277164#c896595845343310172' title='comment permalink'>
September 10, 2012 at 3:17 AM
</a>
<span class='item-control blog-admin pid-460836560'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=896595845343310172' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c7655674306393884862'>
<a name='c7655674306393884862'></a>
shweta
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-7655674306393884862'>
<p>
i m able to override  public static method<br /><br /><br /><br />class TestB{<br /> <br /> public static void mytest()<br /> {<br />  System.out.println(&quot;ok in B&quot;);<br /> }<br />}<br />public class TestA extends TestB{<br /> public static void mytest()<br /> {<br />  System.out.println(&quot;ok in A&quot;);<br /> }<br /> <br /> public static void main(String args[])<br /> {<br />  mytest();<br /> }<br />}
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1348754456192#c7655674306393884862' title='comment permalink'>
September 27, 2012 at 7:00 AM
</a>
<span class='item-control blog-admin pid-1359485089'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=7655674306393884862' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c4221206289139984941'>
<a name='c4221206289139984941'></a>
Vishal
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-4221206289139984941'>
<p>
Why people compare method overloading to method overriding ? I thing both are completely different operations except similarity in name. Comparing overloading vs overriding is like comparing Orange to apples.
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1357697976233#c4221206289139984941' title='comment permalink'>
January 8, 2013 at 6:19 PM
</a>
<span class='item-control blog-admin pid-416453939'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=4221206289139984941' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author blogger-comment-icon' id='c4760010202926419659'>
<a name='c4760010202926419659'></a>
<a href='http://www.blogger.com/profile/01065655402414692963' rel='nofollow'>
Vivek Hingorani
</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-4760010202926419659'>
<p>
@Shweta: Its not overriding as you havent created any instance and directly calling mytest() from class TestA so it will print &quot;Ok in A&quot; as overriding doesnt come into picture at all.. <br />@Javin: Do let me know if i am wrong :-)
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1365839326782#c4760010202926419659' title='comment permalink'>
April 13, 2013 at 12:48 AM
</a>
<span class='item-control blog-admin pid-391395519'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=4760010202926419659' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author blogger-comment-icon' id='c5620169595929426390'>
<a name='c5620169595929426390'></a>
<a href='http://www.blogger.com/profile/00904327601055779611' rel='nofollow'>
kinjal shah
</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-5620169595929426390'>
<p>
I was asked in an interview if we can overload public static void main(String[] args) method?<br />ans: Yes we can.
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1368168927349#c5620169595929426390' title='comment permalink'>
May 9, 2013 at 11:55 PM
</a>
<span class='item-control blog-admin pid-825122881'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=5620169595929426390' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
<dt class='comment-author anon-comment-icon' id='c5713295607762041537'>
<a name='c5713295607762041537'></a>
<a href='http://javarevisited.blogspot.in/' rel='nofollow'>
chetan
</a>
said...
</dt>
<dd class='comment-body' id='Blog1_cmt-5713295607762041537'>
<p>
overloading.....method name remains the same only changes will be in the type or number of arguments<br /><br />eg: public void testmethod()<br />    public void testmethod(int a,int b)<br /><br />overriding .....method name and argument remains the same only the implementation will change<br />for overriding to happen <br />1&gt;inheritance should happen <br />eg:<br /><br />public class test1{<br /><br />public void test(){<br />system.out.println(&quot;running test method in class test1&quot;);<br />}<br />}<br />public class test2 extends test1{<br /><br />public void test(){<br />system.out.println(&quot;running test method in class test2&quot;);<br />}<br />} 
</p>
</dd>
<dd class='comment-footer'>
<span class='comment-timestamp'>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html?showComment=1368785906473#c5713295607762041537' title='comment permalink'>
May 17, 2013 at 3:18 AM
</a>
<span class='item-control blog-admin pid-933179082'>
<a class='comment-delete' href='http://www.blogger.com/delete-comment.g?blogID=8712770457197348465&postID=5713295607762041537' title='Delete Comment'>
<img src='//www.blogger.com/img/icon_delete13.gif'/>
</a>
</span>
</span>
</dd>
</dl>
</div>
<p class='comment-footer'>
<div class='comment-form'>
<a name='comment-form'></a>
<h4 id='comment-post-message'>
Post a Comment
</h4>
<p>
</p>
<a href='https://www.blogger.com/comment-iframe.g?blogID=8712770457197348465&postID=6918417983311999028' id='comment-editor-src'></a>
<iframe allowtransparency='true' class='blogger-iframe-colorize blogger-comment-from-post' frameborder='0' height='410' id='comment-editor' name='comment-editor' src='' width='100%'></iframe>
<script type="text/javascript" src="https://www.blogger.com/static/v1/jsbin/3995214906-comment_from_post_iframe.js"></script>
<script type='text/javascript'>
                    BLOG_CMT_createIframe('https://www.blogger.com/rpc_relay.html', '03974492238039089807');
                  </script>
</div>
</p>
<div id='backlinks-container'>
<div id='Blog1_backlinks-container'>
</div>
</div>
</div>
</div>

                      </div></div>
                    
<!-- google_ad_section_end -->
</div>
<div class='blog-pager' id='blog-pager'>
<span id='blog-pager-newer-link'>
<a class='blog-pager-newer-link' href='http://javarevisited.blogspot.com/2011/12/how-to-change-tomcat-default-port-8080.html' id='Blog1_blog-pager-newer-link' title='Newer Post'>
Newer Post
</a>
</span>
<span id='blog-pager-older-link'>
<a class='blog-pager-older-link' href='http://javarevisited.blogspot.com/2011/12/address-already-use-jvm-bind-exception.html' id='Blog1_blog-pager-older-link' title='Older Post'>
Older Post
</a>
</span>
<a class='home-link' href='http://javarevisited.blogspot.com/'>
Home
</a>
</div>
<div class='clear'></div>
<div class='post-feeds'>
<div class='feed-links'>
Subscribe to:
<a class='feed-link' href='http://javarevisited.blogspot.com/feeds/6918417983311999028/comments/default' target='_blank' type='application/atom+xml'>
Post Comments
                      (
                      Atom
                      )
                    </a>
</div>
</div>
<script type="text/javascript">window.___gcfg = {'lang': 'en'};</script>
</div><div class='widget HTML' id='HTML9'>
<div class='widget-content'>
<div data-type="ad" data-publisher="lqm.javarevisited.site" data-zone="ron" data-format="728x90"></div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML9&action=editWidget&sectionId=main' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML9"));' target='configHTML9' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div></div>
</div>
</div>
<div id='sidebar-wrap'>
<div id='sidebartop-wrap'>
<div id='sidebartop-wrap2'>
<div class='sidebar section' id='sidebartop'><div class='widget LinkList' id='LinkList1'>
<h2>Best of Javarevisited</h2>
<div class='widget-content'>
<ul>
<li><a href='http://javarevisited.blogspot.sg/2013/06/introduction-of-how-android-works-Java-programmers.html'>How Android works, Introduction for Java Programmers </a></li>
<li><a href='http://javarevisited.blogspot.sg/2013/11/scala-vs-java-differences-similarities-books.html'>Difference between Java and Scala Programming</a></li>
<li><a href='http://javarevisited.blogspot.com/2013/01/top-5-java-programming-books-best-good.html'>Top 5 Java Programming Books for Developers</a></li>
<li><a href='http://javarevisited.blogspot.sg/2012/08/top-10-jdbc-best-practices-for-java.html'>Top 10 JDBC Best Practices for Java programmers</a></li>
<li><a href='http://javarevisited.blogspot.sg/2013/05/ava-tips-and-best-practices-to-avoid-nullpointerexception-program-application.html'>Tips and Best practices to avoid NullPointerException in Java</a></li>
<li><a href='http://javarevisited.blogspot.sg/2012/03/10-object-oriented-design-principles.html'>10 Object Oriented Design Principles Java Programmer Should Know</a></li>
<li><a href='http://javarevisited.blogspot.sg/2011/11/hotspot-jvm-options-java-examples.html'>10 HotSpot JVM Options, Every Java Programmer Should Know</a></li>
</ul>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=LinkList&widgetId=LinkList1&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("LinkList1"));' target='configLinkList1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div>
</div><div class='widget HTML' id='HTML5'>
<div class='widget-content'>
<div id="GoogleAds1">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-5808379456926196";
google_ad_host = "pub-1556223355139109";
/* 300 x 600 Right Side Bar Above the Fold */
google_ad_slot = "1677562743";
google_ad_width = 300;
google_ad_height = 600;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML5&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML5"));' target='configHTML5' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget Subscribe' id='Subscribe1'>
<div style='white-space:nowrap'>
<h2 class='title'>
Subscribe To This Blog Free
</h2>
<div class='widget-content'>
<div class='subscribe-wrapper subscribe-type-POST'>
<div class='subscribe expanded subscribe-type-POST' id='SW_READER_LIST_Subscribe1POST' style='display:none;'>
<div class='top'>
<span class='inner' onclick='return(_SW_toggleReaderList(event, "Subscribe1POST"));'>
<img class='subscribe-dropdown-arrow' src='http://img2.blogblog.com/img/widgets/arrow_dropdown.gif'/>
<img align='absmiddle' alt='' border='0' class='feed-icon' src='http://img1.blogblog.com/img/icon_feed12.png'/>
Posts
</span>
<div class='feed-reader-links'>
<a class='feed-reader-link' href='http://www.netvibes.com/subscribe.php?url=http%3A%2F%2Fjavarevisited.blogspot.com%2Ffeeds%2Fposts%2Fdefault' target='_blank'>
<img src='http://img1.blogblog.com/img/widgets/subscribe-netvibes.png'/>
</a>
<a class='feed-reader-link' href='http://add.my.yahoo.com/content?url=http%3A%2F%2Fjavarevisited.blogspot.com%2Ffeeds%2Fposts%2Fdefault' target='_blank'>
<img src='http://img1.blogblog.com/img/widgets/subscribe-yahoo.png'/>
</a>
<a class='feed-reader-link' href='http://javarevisited.blogspot.com/feeds/posts/default' target='_blank'>
<img align='absmiddle' class='feed-icon' src='http://img1.blogblog.com/img/icon_feed12.png'/>
                                    Atom
                                  </a>
</div>
</div>
<div class='bottom'></div>
</div>
<div class='subscribe' id='SW_READER_LIST_CLOSED_Subscribe1POST' onclick='return(_SW_toggleReaderList(event, "Subscribe1POST"));'>
<div class='top'>
<span class='inner'>
<img class='subscribe-dropdown-arrow' src='http://img2.blogblog.com/img/widgets/arrow_dropdown.gif'/>
<span onclick='return(_SW_toggleReaderList(event, "Subscribe1POST"));'>
<img align='absmiddle' alt='' border='0' class='feed-icon' src='http://img1.blogblog.com/img/icon_feed12.png'/>
Posts
</span>
</span>
</div>
<div class='bottom'></div>
</div>
</div>
<div class='subscribe-wrapper subscribe-type-PER_POST'>
<div class='subscribe expanded subscribe-type-PER_POST' id='SW_READER_LIST_Subscribe1PER_POST' style='display:none;'>
<div class='top'>
<span class='inner' onclick='return(_SW_toggleReaderList(event, "Subscribe1PER_POST"));'>
<img class='subscribe-dropdown-arrow' src='http://img2.blogblog.com/img/widgets/arrow_dropdown.gif'/>
<img align='absmiddle' alt='' border='0' class='feed-icon' src='http://img1.blogblog.com/img/icon_feed12.png'/>
Comments
</span>
<div class='feed-reader-links'>
<a class='feed-reader-link' href='http://www.netvibes.com/subscribe.php?url=http%3A%2F%2Fjavarevisited.blogspot.com%2Ffeeds%2F6918417983311999028%2Fcomments%2Fdefault' target='_blank'>
<img src='http://img1.blogblog.com/img/widgets/subscribe-netvibes.png'/>
</a>
<a class='feed-reader-link' href='http://add.my.yahoo.com/content?url=http%3A%2F%2Fjavarevisited.blogspot.com%2Ffeeds%2F6918417983311999028%2Fcomments%2Fdefault' target='_blank'>
<img src='http://img1.blogblog.com/img/widgets/subscribe-yahoo.png'/>
</a>
<a class='feed-reader-link' href='http://javarevisited.blogspot.com/feeds/6918417983311999028/comments/default' target='_blank'>
<img align='absmiddle' class='feed-icon' src='http://img1.blogblog.com/img/icon_feed12.png'/>
                                    Atom
                                  </a>
</div>
</div>
<div class='bottom'></div>
</div>
<div class='subscribe' id='SW_READER_LIST_CLOSED_Subscribe1PER_POST' onclick='return(_SW_toggleReaderList(event, "Subscribe1PER_POST"));'>
<div class='top'>
<span class='inner'>
<img class='subscribe-dropdown-arrow' src='http://img2.blogblog.com/img/widgets/arrow_dropdown.gif'/>
<span onclick='return(_SW_toggleReaderList(event, "Subscribe1PER_POST"));'>
<img align='absmiddle' alt='' border='0' class='feed-icon' src='http://img1.blogblog.com/img/icon_feed12.png'/>
Comments
</span>
</span>
</div>
<div class='bottom'></div>
</div>
</div>
<div style='clear:both'></div>
</div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=Subscribe&widgetId=Subscribe1&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("Subscribe1"));' target='configSubscribe1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget HTML' id='HTML12'>
<div class='widget-content'>
<!-- AddThis Button BEGIN -->
<h2>Follow Us</h2>
<a href="https://twitter.com/javinpaul" class="twitter-follow-button" data-show-count="true" rel="nofollow" >Follow @javinpaul</a>
<div class="addthis_toolbox addthis_32x32_style addthis_default_style">
<a class="addthis_button_google_plusone_badge" g:plusone:size="badge" g:plusone:href="https://plus.google.com/103515296667914706982/" rel="nofollow" ></a>
</div>
<script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=javabuddy"></script>
<!-- AddThis Button END -->
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML12&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML12"));' target='configHTML12' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget HTML' id='HTML10'>
<div class='widget-content'>
<div data-type="ad" data-publisher="lqm.javarevisited.site" data-zone="ron" data-format="300x250"></div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML10&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML10"));' target='configHTML10' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget HTML' id='HTML15'>
<div class='widget-content'>
<div style="height:187px; width:300px; border-color:#f4f4f4; background-color:white;" class="fb-like-box" data-href="http://www.facebook.com/javarevisited" data-width="300" data-height="187" data-show-faces="true" data-stream="false" data-header="false"></div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML15&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML15"));' target='configHTML15' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget Followers' id='Followers1'>
<h2 class='title'>Followers</h2>
<div class='widget-content'>
<div id='Followers1-wrapper'>
<div style='margin-right:2px;'>
<script type="text/javascript">
        if (!window.google || !google.friendconnect) {
          document.write('<script type="text/javascript"' +
              'src="//www.google.com/friendconnect/script/friendconnect.js">' +
              '</scr' + 'ipt>');
        }
      </script>
<script type="text/javascript">
      if (!window.registeredBloggerCallbacks) {
        window.registeredBloggerCallbacks = true;

        

        
        gadgets.rpc.register('requestReload', function() {
          document.location.reload();
        });

        
        gadgets.rpc.register('requestSignOut', function(siteId) {
          
          google.friendconnect.container.openSocialSiteId = siteId;
          google.friendconnect.requestSignOut();
        });
      }
    </script>
<script type="text/javascript">
    
    function registerGetBlogUrls() {
      gadgets.rpc.register('getBlogUrls', function() {
        var holder = {};
        
          
            
            
              holder.currentPost = "http://www.blogger.com/feeds/8712770457197348465/posts/default/6918417983311999028";
            
            
            
              holder.currentComments = "http://www.blogger.com/feeds/8712770457197348465/6918417983311999028/comments/default";
            
            holder.currentPostUrl = "";
            holder.currentPostId = 6918417983311999028
          
          
          
            holder.postFeed = "http://www.blogger.com/feeds/8712770457197348465/posts/default";
          
          
          
            holder.commentFeed = "http://www.blogger.com/feeds/8712770457197348465/comments/default";
          
          holder.currentBlogUrl = "http://javarevisited.blogspot.com/";
          holder.currentBlogId = "8712770457197348465";
        
        return holder;
      });
    }
  </script>
<script type="text/javascript">
  if (!window.registeredCommonBloggerCallbacks) {
    window.registeredCommonBloggerCallbacks = true;

    gadgets.rpc.register('resize_iframe', function(height) {
      var el = document.getElementById(this['f']);
      if (el) {
        el.style.height = height + 'px';
      }
    });

    
    gadgets.rpc.register('set_pref', function() {});

    registerGetBlogUrls();
  }
  </script>
<div id="div-hx6yj5idvi3h" style="width: 100%; "></div>
<script type="text/javascript">
    var skin = {};
    skin['FACE_SIZE'] = '32';
    skin['HEIGHT'] = "260";
    skin['TITLE'] = "Followers";
    skin['BORDER_COLOR'] = "transparent";
    skin['ENDCAP_BG_COLOR'] = "transparent";
    skin['ENDCAP_TEXT_COLOR'] = "#333333";
    skin['ENDCAP_LINK_COLOR'] = "#000000";
    skin['ALTERNATE_BG_COLOR'] = "transparent";
    
    skin['CONTENT_BG_COLOR'] = "transparent";
    skin['CONTENT_LINK_COLOR'] = "#000000";
    skin['CONTENT_TEXT_COLOR'] = "#333333";
    skin['CONTENT_SECONDARY_LINK_COLOR'] = "#FFFFFF";
    skin['CONTENT_SECONDARY_TEXT_COLOR'] = "#000000";
    skin['CONTENT_HEADLINE_COLOR'] = "#000000";
    skin['FONT_FACE'] = "normal normal 100% \x27Trebuchet MS\x27,Verdana,Arial,Sans-serif";
    google.friendconnect.container.setParentUrl("/");
    google.friendconnect.container["renderMembersGadget"](
    {id: "div-hx6yj5idvi3h",
     height: 260,
     
     
     
     site: "03974492238039089807",
     
     locale: 'en' },
     skin);
  </script>
</div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=Followers&widgetId=Followers1&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("Followers1"));' target='configFollowers1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div>
</div><div class='widget HTML' id='HTML6'>
<div class='widget-content'>
<div data-type="ad" data-publisher="lqm.javarevisited.site" data-zone="ron" data-format="300x250"></div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML6&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML6"));' target='configHTML6' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget HTML' id='HTML1'>
<div class='widget-content'>
<form onsubmit="window.open('http://feedburner.google.com/fb/a/mailverify?uri=javarevisited', 'popupwindow', 'scrollbars=yes,width=550,height=320');return true" style="padding:3px; text-align: left;" action="http://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow"><p style="font-weight: bold;">Subscribe by email:</p><input style="width: 180px;" name="email" type="text" /><input value="Javarevisited" name="uri" type="hidden" /><input name="loc" value="en_US" type="hidden" /><input value="Subscribe" type="submit" /><a href="http://feedburner.google.com/" target="_blank">
</a></form>
<a href="https://plus.google.com/114528699166048052030?rel=author">By Javin Paul</a>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML1&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML1"));' target='configHTML1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget HTML' id='HTML11'>
<div class='widget-content'>
<div id="cse2" style="width: 100%;">Loading</div>
<script src="http://www.google.com/jsapi" type="text/javascript"></script>
<script type="text/javascript"> 
  google.load('search', '1', {language : 'en', style : google.loader.themes.MINIMALIST});
  google.setOnLoadCallback(function() {
    var customSearchOptions2 = {};
    var imageSearchOptions2 = {};
    imageSearchOptions2['layout'] = google.search.ImageSearch.LAYOUT_CLASSIC;
    customSearchOptions2['enableImageSearch'] = true;
    customSearchOptions2['imageSearchOptions2'] = imageSearchOptions2;  var customSearchControl2 = new google.search.CustomSearchControl(
      '012427717818445714149:z39lizts1ve', customSearchOptions2);
    customSearchControl2.setResultSetSize(google.search.Search.FILTERED_CSE_RESULTSET);
    var options = new google.search.DrawOptions();
    options.enableSearchboxOnly("http://www.google.com/cse?cx=012427717818445714149:z39lizts1ve");
    customSearchControl2.draw('cse2', options);
  }, true);
</script>

<style type="text/css">
  input.gsc-input {
    border-color: #333333;
  }
  input.gsc-search-button {
    border-color: #333333;
    background-color: #333333;
  }
</style>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML11&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML11"));' target='configHTML11' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget AdSense' id='AdSense1'>
<div class='widget-content'>
<script type="text/javascript"><!--
google_ad_client="pub-5808379456926196";
google_ad_host="pub-1556223355139109";
google_ad_width=200;
google_ad_height=90;
google_ad_format="200x90_0ads_al_s";
google_ad_host_channel="0001+S0016+L0001";
google_color_border="558866";
google_color_bg="558866";
google_color_link="FFFFFF";
google_color_url="0066CC";
google_color_text="FFFFFF";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=AdSense&widgetId=AdSense1&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("AdSense1"));' target='configAdSense1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div>
</div><div class='widget BlogArchive' id='BlogArchive1'>
<h2>
Blog Archive
</h2>
<div class='widget-content'>
<div id='ArchiveList'>
<div id='BlogArchive1_ArchiveList'>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/search?updated-min=2014-01-01T00:00:00-08:00&amp;updated-max=2015-01-01T00:00:00-08:00&amp;max-results=50'>
2014
</a>
<span class='post-count' dir='ltr'>
                          (
                          88
                          )
                        </span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2014_10_01_archive.html'>
October
</a>
<span class='post-count' dir='ltr'>
                          (
                          1
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2014_09_01_archive.html'>
September
</a>
<span class='post-count' dir='ltr'>
                          (
                          9
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2014_08_01_archive.html'>
August
</a>
<span class='post-count' dir='ltr'>
                          (
                          9
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2014_07_01_archive.html'>
July
</a>
<span class='post-count' dir='ltr'>
                          (
                          8
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2014_06_01_archive.html'>
June
</a>
<span class='post-count' dir='ltr'>
                          (
                          8
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2014_05_01_archive.html'>
May
</a>
<span class='post-count' dir='ltr'>
                          (
                          11
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2014_04_01_archive.html'>
April
</a>
<span class='post-count' dir='ltr'>
                          (
                          10
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2014_03_01_archive.html'>
March
</a>
<span class='post-count' dir='ltr'>
                          (
                          11
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2014_02_01_archive.html'>
February
</a>
<span class='post-count' dir='ltr'>
                          (
                          11
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2014_01_01_archive.html'>
January
</a>
<span class='post-count' dir='ltr'>
                          (
                          10
                          )
                        </span>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/search?updated-min=2013-01-01T00:00:00-08:00&amp;updated-max=2014-01-01T00:00:00-08:00&amp;max-results=50'>
2013
</a>
<span class='post-count' dir='ltr'>
                          (
                          136
                          )
                        </span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_12_01_archive.html'>
December
</a>
<span class='post-count' dir='ltr'>
                          (
                          5
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_11_01_archive.html'>
November
</a>
<span class='post-count' dir='ltr'>
                          (
                          7
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_10_01_archive.html'>
October
</a>
<span class='post-count' dir='ltr'>
                          (
                          3
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_09_01_archive.html'>
September
</a>
<span class='post-count' dir='ltr'>
                          (
                          3
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_08_01_archive.html'>
August
</a>
<span class='post-count' dir='ltr'>
                          (
                          13
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_07_01_archive.html'>
July
</a>
<span class='post-count' dir='ltr'>
                          (
                          12
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_06_01_archive.html'>
June
</a>
<span class='post-count' dir='ltr'>
                          (
                          9
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_05_01_archive.html'>
May
</a>
<span class='post-count' dir='ltr'>
                          (
                          14
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_04_01_archive.html'>
April
</a>
<span class='post-count' dir='ltr'>
                          (
                          18
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_03_01_archive.html'>
March
</a>
<span class='post-count' dir='ltr'>
                          (
                          16
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_02_01_archive.html'>
February
</a>
<span class='post-count' dir='ltr'>
                          (
                          18
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2013_01_01_archive.html'>
January
</a>
<span class='post-count' dir='ltr'>
                          (
                          18
                          )
                        </span>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/search?updated-min=2012-01-01T00:00:00-08:00&amp;updated-max=2013-01-01T00:00:00-08:00&amp;max-results=50'>
2012
</a>
<span class='post-count' dir='ltr'>
                          (
                          217
                          )
                        </span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_12_01_archive.html'>
December
</a>
<span class='post-count' dir='ltr'>
                          (
                          52
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_11_01_archive.html'>
November
</a>
<span class='post-count' dir='ltr'>
                          (
                          8
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_10_01_archive.html'>
October
</a>
<span class='post-count' dir='ltr'>
                          (
                          14
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_09_01_archive.html'>
September
</a>
<span class='post-count' dir='ltr'>
                          (
                          8
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_08_01_archive.html'>
August
</a>
<span class='post-count' dir='ltr'>
                          (
                          9
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_07_01_archive.html'>
July
</a>
<span class='post-count' dir='ltr'>
                          (
                          9
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_06_01_archive.html'>
June
</a>
<span class='post-count' dir='ltr'>
                          (
                          12
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_05_01_archive.html'>
May
</a>
<span class='post-count' dir='ltr'>
                          (
                          10
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_04_01_archive.html'>
April
</a>
<span class='post-count' dir='ltr'>
                          (
                          14
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_03_01_archive.html'>
March
</a>
<span class='post-count' dir='ltr'>
                          (
                          28
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_02_01_archive.html'>
February
</a>
<span class='post-count' dir='ltr'>
                          (
                          18
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2012_01_01_archive.html'>
January
</a>
<span class='post-count' dir='ltr'>
                          (
                          35
                          )
                        </span>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate expanded'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy toggle-open'>
                          &#9660;&#160;
                        </span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/search?updated-min=2011-01-01T00:00:00-08:00&amp;updated-max=2012-01-01T00:00:00-08:00&amp;max-results=50'>
2011
</a>
<span class='post-count' dir='ltr'>
                          (
                          145
                          )
                        </span>
<ul class='hierarchy'>
<li class='archivedate expanded'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy toggle-open'>
                          &#9660;&#160;
                        </span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_12_01_archive.html'>
December
</a>
<span class='post-count' dir='ltr'>
                          (
                          28
                          )
                        </span>
<ul class='posts'>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/difference-between-wait-sleep-yield.html'>
Difference between Wait and Sleep , Yield in Java
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/parse-read-xml-file-java-sax-parser.html'>
Step By Step guide to Read XML file in Java Using ...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/bad-version-number-in-class-files-cause.html'>
Error java.lang.UnsupportedClassVersionError: Bad ...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/difference-between-dom-and-sax-parsers.html'>
Difference between DOM and SAX Parsers in Java
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/read-write-image-in-java-example.html'>
How to read and write Images in java using ImageIO...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/how-to-convert-map-to-list-in-java.html'>
How to Convert Map to List in Java Example
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/how-to-traverse-or-loop-hashmap-in-java.html'>
4 example to Iterate over HashMap, Hashtable or an...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/final-variable-method-class-java.html'>
What is final in Java? Final variable , Method and...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/jre-jvm-jdk-jit-in-java-programming.html'>
Difference between JRE JVM and JDK in Java Program...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/parse-xml-file-in-java-example-tutorial.html'>
How to Parse or Read XML File in Java  &gt;&gt; XML Tuto...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/checked-vs-unchecked-exception-in-java.html'>
Checked vs Unchecked Exception in Java Example
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/observer-design-pattern-java-example.html'>
Observer design Pattern in Java with Real world co...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/how-to-change-tomcat-default-port-8080.html'>
How to change Tomcat default port 8080
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html'>
What is Method Overloading and Overriding in Java ...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/address-already-use-jvm-bind-exception.html'>
Java.net.BindException: Address already in use: JV...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/main-public-static-java-void-method-why.html'>
Why main method is public static in Java
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/load-on-startup-servlet-webxml-example.html'>
What is load-on-startup servlet element in web.xml...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/does-siri-going-to-replace-google-as.html'>
Is Apple IPhone4S Siri going to replace the Google...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/kill-command-unix-linux-example.html'>
5 Example of kill command in UNIX and Linux
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/treemap-java-tutorial-example-program.html'>
Java TreeMap Tutorial: 10 Example of TreeMap in Ja...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/convert-enum-string-java-example.html'>
How to parse String to Enum in Java | Convert Enum...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/fix-protocol-data-dictionaries-and.html'>
Top 5 FIX Protocol Data Dictionaries and Online FI...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/read-and-write-text-file-java.html'>
How to read and write in text file in Java
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/javarmimarshalexception-corba-marshal.html'>
How to deal with Java.rmi.MarshalException: CORBA ...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/matt-cutt-revealing-googles-latest.html'>
Matt Cutt Revealing Google&#39;s Latest Algorithmic Ch...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/create-file-directory-java-example.html'>
How to Create File and Directory in Java Example -...
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/java-string-replace-example-tutorial.html'>
Java String Replace Example Tutorial
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/2011/12/factory-design-pattern-java-example.html'>
What is Factory method Design Pattern in Java with...
</a>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_11_01_archive.html'>
November
</a>
<span class='post-count' dir='ltr'>
                          (
                          14
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_10_01_archive.html'>
October
</a>
<span class='post-count' dir='ltr'>
                          (
                          14
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_09_01_archive.html'>
September
</a>
<span class='post-count' dir='ltr'>
                          (
                          22
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_08_01_archive.html'>
August
</a>
<span class='post-count' dir='ltr'>
                          (
                          11
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_07_01_archive.html'>
July
</a>
<span class='post-count' dir='ltr'>
                          (
                          7
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_06_01_archive.html'>
June
</a>
<span class='post-count' dir='ltr'>
                          (
                          9
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_05_01_archive.html'>
May
</a>
<span class='post-count' dir='ltr'>
                          (
                          6
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_04_01_archive.html'>
April
</a>
<span class='post-count' dir='ltr'>
                          (
                          10
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_03_01_archive.html'>
March
</a>
<span class='post-count' dir='ltr'>
                          (
                          4
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_02_01_archive.html'>
February
</a>
<span class='post-count' dir='ltr'>
                          (
                          10
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2011_01_01_archive.html'>
January
</a>
<span class='post-count' dir='ltr'>
                          (
                          10
                          )
                        </span>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/search?updated-min=2010-01-01T00:00:00-08:00&amp;updated-max=2011-01-01T00:00:00-08:00&amp;max-results=33'>
2010
</a>
<span class='post-count' dir='ltr'>
                          (
                          33
                          )
                        </span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2010_12_01_archive.html'>
December
</a>
<span class='post-count' dir='ltr'>
                          (
                          4
                          )
                        </span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

                            &#9658;&#160;
                          
</span>
</a>
<a class='post-count-link' href='http://javarevisited.blogspot.com/2010_10_01_archive.html'>
October
</a>
<span class='post-count' dir='ltr'>
                          (
                          29
                          )
                        </span>
</li>
</ul>
</li>
</ul>
</div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=BlogArchive&widgetId=BlogArchive1&action=editWidget&sectionId=sidebartop' onclick='return _WidgetManager._PopupConfig(document.getElementById("BlogArchive1"));' target='configBlogArchive1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div>
</div></div>
</div>
</div>
<div id='sidebarbottom-wrap1'>
<div id='sidebarbottom-wrap2'>
<div class='sidebar section' id='sidebar'><div class='widget HTML' id='HTML4'>
<h2 class='title'>
References
</h2>
<div class='widget-content'>
<ul><br /><li><a href="http://docs.oracle.com/javase/6/docs/api/" rel="nofollow">Java API documentation JDK 6</a></li><br /><li><a href="http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/" rel="nofollow">Spring framework doc</a></li><br /><li><a href="http://struts.apache.org/" rel="nofollow">Struts</a></li><br /><li><a href="http://jdk7.java.net/" rel="nofollow">JDK 7 API</a></li><br /><li><a href="http://dev.mysql.com/doc/refman/5.5/en/" rel="nofollow">MySQL</a></li><br /><li><a href="http://www.linux.org/" rel="nofollow">Linux</a></li><br /><li><a href="http://www.eclipse.org/" rel="nofollow">Eclipse</a></li><br /><li><a href="http://jquery.com/" rel="nofollow">jQuery</a></li><br /></ul>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=HTML&widgetId=HTML4&action=editWidget&sectionId=sidebar' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML4"));' target='configHTML4' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget Attribution' id='Attribution1'>
<div class='widget-content' style='text-align: center;'>
Copyright by Javin Paul 2012. Powered by <a href='http://www.blogger.com' target='_blank'>Blogger</a>.
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=Attribution&widgetId=Attribution1&action=editWidget&sectionId=sidebar' onclick='return _WidgetManager._PopupConfig(document.getElementById("Attribution1"));' target='configAttribution1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div></div>
</div>
</div>
</div>
<div id='footer-wrap1'>
<div id='footer-wrap2'>
<div class='footer section' id='footer'><div class='widget HTML' id='HTML3'>
<script language="JavaScript">var OB_platformType = 1; var OB_langJS = 'http://widgets.outbrain.com/lang_en.js'; var OBITm = '1287894986691';var OB_raterMode = 'singleThumb';var OB_recMode = 'rec';</script><script language="JavaScript"  src="http://widgets.outbrain.com/OutbrainRater.js"></script> 
<input type="hidden" name="OBKey" value="+OCjH50Z4DIVqrUFp64IDQ==" /> <script language="JavaScript">var OBCTm='1287894986691'; </script><script language="JavaScript" src="http://widgets.outbrain.com/claim.js"></script>
</div><div class='widget PageList' id='PageList1'>
<div class='widget-content'>
<ul>
<li>
<a href='http://javarevisited.blogspot.com/p/about-me.html'>
About Me
</a>
</li>
<li>
<a href='http://javarevisited.blogspot.com/p/privacy-policy.html'>
Privacy Policy
</a>
</li>
</ul>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=8712770457197348465&widgetType=PageList&widgetId=PageList1&action=editWidget&sectionId=footer' onclick='return _WidgetManager._PopupConfig(document.getElementById("PageList1"));' target='configPageList1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div>
</div></div>
</div>
</div>
</div>
<!-- infolinks -->
<script type='text/javascript'>
      var infolink_pid = 258201;
      var infolink_wsid = 0;
    </script>
<script src='http://resources.infolinks.com/js/infolinks_main.js' type='text/javascript'></script>
<!-- facebook -->
<div id='fb-root'></div>
<script>
      (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
        fjs.parentNode.insertBefore(js, fjs);
      }(document, 'script', 'facebook-jssdk'));</script>
<!-- lake quincy -->
<script type='text/javascript'>
      function _dmBootstrap(file) {
        var _dma = document.createElement('script'); 
                                          _dma.type = 'text/javascript';
                                          _dma.async = true; 
                                          _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
                                          (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
                                          }
                                          function _dmFollowup(file) { if (typeof DMAds === 'undefined')  _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js');}
                                                                           (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000);})();
    </script>
<script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('widgetJsBefore');
</script><script type="text/javascript" src="https://www.blogger.com/static/v1/widgets/2271878333-widgets.js"></script>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
<script type='text/javascript'>
if (typeof(BLOG_attachCsiOnload) != 'undefined' && BLOG_attachCsiOnload != null) { window['blogger_templates_experiment_id'] = "templatesV1";window['blogger_blog_id'] = '8712770457197348465';BLOG_attachCsiOnload('item_'); }_WidgetManager._Init('//www.blogger.com/rearrange?blogID\x3d8712770457197348465','//javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html','8712770457197348465');
_WidgetManager._SetDataContext([{'name': 'blog', 'data': {'blogId': '8712770457197348465', 'bloggerUrl': 'http://www.blogger.com', 'title': 'Javarevisited', 'pageType': 'item', 'postId': '6918417983311999028', 'url': 'http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html', 'canonicalUrl': 'http://javarevisited.blogspot.com/2011/12/method-overloading-vs-method-overriding.html', 'canonicalHomepageUrl': 'http://javarevisited.blogspot.com/', 'homepageUrl': 'http://javarevisited.blogspot.com/', 'blogspotFaviconUrl': 'http://javarevisited.blogspot.com/favicon.ico', 'enabledCommentProfileImages': false, 'adultContent': false, 'disableAdSenseWidget': false, 'analyticsAccountNumber': 'UA-19004659-1', 'searchLabel': '', 'searchQuery': '', 'pageName': 'What is Method Overloading and Overriding in Java - Example Differences Tutorial', 'pageTitle': 'Javarevisited: What is Method Overloading and Overriding in Java - Example Differences Tutorial', 'encoding': 'UTF-8', 'locale': 'en', 'localeUnderscoreDelimited': 'en', 'isPrivate': false, 'isMobile': false, 'isMobileRequest': false, 'mobileClass': '', 'isPrivateBlog': false, 'languageDirection': 'ltr', 'feedLinks': '\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Javarevisited - Atom\42 href\75\42http://javarevisited.blogspot.com/feeds/posts/default\42 /\76\n\74link rel\75\42alternate\42 type\75\42application/rss+xml\42 title\75\42Javarevisited - RSS\42 href\75\42http://javarevisited.blogspot.com/feeds/posts/default?alt\75rss\42 /\76\n\74link rel\75\42service.post\42 type\75\42application/atom+xml\42 title\75\42Javarevisited - Atom\42 href\75\42http://www.blogger.com/feeds/8712770457197348465/posts/default\42 /\76\n\n\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Javarevisited - Atom\42 href\75\42http://javarevisited.blogspot.com/feeds/6918417983311999028/comments/default\42 /\76\n', 'meTag': '', 'openIdOpTag': '', 'googleProfileUrl': 'https://plus.google.com/114528699166048052030', 'postImageThumbnailUrl': 'http://2.bp.blogspot.com/-wrzDeQGAe1I/TWu8pLuLr4I/AAAAAAAAADE/V017G-6Q61w/s72-c/java_logo_50_50.jpg', 'postImageUrl': 'http://2.bp.blogspot.com/-wrzDeQGAe1I/TWu8pLuLr4I/AAAAAAAAADE/V017G-6Q61w/s1600/java_logo_50_50.jpg', 'latencyHeadScript': '\74script type\75\42text/javascript\42\76(function() { var b\75window,f\75\42chrome\42,g\75\42tick\42,k\75\42jstiming\42;(function(){function d(a){this.t\75{};this.tick\75function(a,d,c){var e\75void 0!\75c?c:(new Date).getTime();this.t[a]\75[e,d];if(void 0\75\75c)try{b.console.timeStamp(\42CSI/\42+a)}catch(h){}};this[g](\42start\42,null,a)}var a;b.performance\46\46(a\75b.performance.timing);var n\75a?new d(a.responseStart):new d;b.jstiming\75{Timer:d,load:n};if(a){var c\75a.navigationStart,h\75a.responseStart;0\74c\46\46h\76\75c\46\46(b[k].srt\75h-c)}if(a){var e\75b[k].load;0\74c\46\46h\76\75c\46\46(e[g](\42_wtsrt\42,void 0,c),e[g](\42wtsrt_\42,\42_wtsrt\42,h),e[g](\42tbsd_\42,\42wtsrt_\42))}try{a\75null,\nb[f]\46\46b[f].csi\46\46(a\75Math.floor(b[f].csi().pageT),e\46\0460\74c\46\46(e[g](\42_tbnd\42,void 0,b[f].csi().startE),e[g](\42tbnd_\42,\42_tbnd\42,c))),null\75\75a\46\46b.gtbExternal\46\46(a\75b.gtbExternal.pageT()),null\75\75a\46\46b.external\46\46(a\75b.external.pageT,e\46\0460\74c\46\46(e[g](\42_tbnd\42,void 0,b.external.startE),e[g](\42tbnd_\42,\42_tbnd\42,c))),a\46\46(b[k].pt\75a)}catch(p){}})();b.tickAboveFold\75function(d){var a\0750;if(d.offsetParent){do a+\75d.offsetTop;while(d\75d.offsetParent)}d\75a;750\76\75d\46\46b[k].load[g](\42aft\42)};var l\75!1;function m(){l||(l\75!0,b[k].load[g](\42firstScrollTime\42))}b.addEventListener?b.addEventListener(\42scroll\42,m,!1):b.attachEvent(\42onscroll\42,m);\n })();\74/script\076', 'mobileHeadScript': '', 'adsenseClientId': 'pub-5808379456926196', 'view': '', 'dynamicViewsCommentsSrc': '//www.blogblog.com/dynamicviews/4224c15c4e7c9321/js/comments.js', 'dynamicViewsScriptSrc': '//www.blogblog.com/dynamicviews/76f25a6f2e06af76', 'plusOneApiSrc': 'https://apis.google.com/js/plusone.js', 'sf': 'n', 'tf': ''}}, {'name': 'skin', 'data': {'vars': {'bottomSidebarLinkColor': '#99ddbb', 'mainVisitedLinkColor': '#660099', 'borderColor': '#bbbbbb', 'mainTextColor': '#333333', 'postTitleColor': '#333333', 'mainBgColor': '#ffffff', 'mainLinkColor': '#0066CC', 'topSidebarTextColor': '#ffffff', 'headerFont': 'normal bold 100% \47Trebuchet MS\47,Verdana,Arial,Sans-serif', 'dateHeaderColor': '#558866', 'endSide': 'right', 'topSidebarLinkColor': '#ffffff', 'topSidebarHeaderColor': '#ffffff', 'startSide': 'left', 'mainHoverLinkColor': '#000066', 'bottomSidebarHeaderColor': '#aabbcc', 'postTitleFont': 'normal bold 135% \47Trebuchet MS\47,Verdana,Arial,Sans-serif', 'titleTextColor': '#ffffff', 'pageTitleFont': 'normal bold 200% \47Trebuchet MS\47,Verdana,Arial,Sans-serif', 'topSidebarVisitedLinkColor': '#ffffff', 'titleBgColor': '#335577', 'bottomSidebarVisitedLinkColor': '#ffffff', 'topSidebarBgColor': '#558866', 'bodyFont': 'normal normal 100% \47Trebuchet MS\47,Verdana,Arial,Sans-serif', 'descriptionFont': 'normal normal 100% \47Trebuchet MS\47,Verdana,Arial,Sans-serif'}, 'override': ''}}, {'name': 'view', 'data': {'classic': {'name': 'classic', 'url': '?view\75classic'}, 'flipcard': {'name': 'flipcard', 'url': '?view\75flipcard'}, 'magazine': {'name': 'magazine', 'url': '?view\75magazine'}, 'mosaic': {'name': 'mosaic', 'url': '?view\75mosaic'}, 'sidebar': {'name': 'sidebar', 'url': '?view\75sidebar'}, 'snapshot': {'name': 'snapshot', 'url': '?view\75snapshot'}, 'timeslide': {'name': 'timeslide', 'url': '?view\75timeslide'}}}]);
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML3', 'footer', null, document.getElementById('HTML3'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_PageListView', new _WidgetInfo('PageList1', 'footer', null, document.getElementById('PageList1'), {'title': '', 'links': [{'href': 'http://javarevisited.blogspot.com/p/about-me.html', 'title': 'About Me', 'isCurrentPage': false, 'id': '6312557353959475498'}, {'href': 'http://javarevisited.blogspot.com/p/privacy-policy.html', 'title': 'Privacy Policy', 'isCurrentPage': false, 'id': '7683233013767637665'}], 'mobile': false}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML8', 'crosscol', null, document.getElementById('HTML8'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML2', 'crosscol', null, document.getElementById('HTML2'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_LinkListView', new _WidgetInfo('LinkList1', 'sidebartop', null, document.getElementById('LinkList1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML5', 'sidebartop', null, document.getElementById('HTML5'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_SubscribeView', new _WidgetInfo('Subscribe1', 'sidebartop', null, document.getElementById('Subscribe1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML12', 'sidebartop', null, document.getElementById('HTML12'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML10', 'sidebartop', null, document.getElementById('HTML10'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML15', 'sidebartop', null, document.getElementById('HTML15'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_FollowersView', new _WidgetInfo('Followers1', 'sidebartop', null, document.getElementById('Followers1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML6', 'sidebartop', null, document.getElementById('HTML6'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML1', 'sidebartop', null, document.getElementById('HTML1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML11', 'sidebartop', null, document.getElementById('HTML11'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_AdSenseView', new _WidgetInfo('AdSense1', 'sidebartop', null, document.getElementById('AdSense1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogArchiveView', new _WidgetInfo('BlogArchive1', 'sidebartop', null, document.getElementById('BlogArchive1'), {'languageDirection': 'ltr'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML4', 'sidebar', null, document.getElementById('HTML4'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_AttributionView', new _WidgetInfo('Attribution1', 'sidebar', null, document.getElementById('Attribution1'), {'attribution': 'Copyright by Javin Paul 2012. Powered by \74a href\75\47http://www.blogger.com\47 target\75\47_blank\47\76Blogger\74/a\76.'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HeaderView', new _WidgetInfo('Header1', 'header', null, document.getElementById('Header1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_NavbarView', new _WidgetInfo('Navbar1', 'navbar', null, document.getElementById('Navbar1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogView', new _WidgetInfo('Blog1', 'main', null, document.getElementById('Blog1'), {'cmtInteractionsEnabled': false}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML9', 'main', null, document.getElementById('HTML9'), {}, 'displayModeFull'));
</script>
</body>
</html>